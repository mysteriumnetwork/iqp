// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// PowerTokenMetaData contains all meta data concerning the PowerToken contract.
var PowerTokenMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"baseRate\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"minGCFee\",\"type\":\"uint96\"}],\"name\":\"BaseRateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"minDuration\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"maxDuration\",\"type\":\"uint32\"}],\"name\":\"LoanDurationLimitsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PerpetualAllowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"percent\",\"type\":\"uint16\"}],\"name\":\"ServiceFeePercentChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allowPerpetualForever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"availableBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"}],\"name\":\"energyAt\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint112\",\"name\":\"amount\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"name\":\"estimateLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint112\",\"name\":\"amount\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"name\":\"estimateLoanDetailed\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"interest\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"serviceFee\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"gcFee\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"forceTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowsPerpetual\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseRate\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseToken\",\"outputs\":[{\"internalType\":\"contractIERC20Metadata\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEnterprise\",\"outputs\":[{\"internalType\":\"contractEnterprise\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGapHalvingPeriod\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIndex\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint112\",\"name\":\"baseRate\",\"type\":\"uint112\"},{\"internalType\":\"uint96\",\"name\":\"minGCFee\",\"type\":\"uint96\"},{\"internalType\":\"uint32\",\"name\":\"gapHalvingPeriod\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"},{\"internalType\":\"contractIERC20Metadata\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"minLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"serviceFeePercent\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"allowsPerpetual\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxLoanDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinGCFee\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinLoanDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getServiceFeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"lockedBalance\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"energy\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"}],\"internalType\":\"structPowerTokenStorage.State\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractEnterprise\",\"name\":\"enterprise\",\"type\":\"address\"},{\"internalType\":\"uint112\",\"name\":\"baseRate\",\"type\":\"uint112\"},{\"internalType\":\"uint96\",\"name\":\"minGCFee\",\"type\":\"uint96\"},{\"internalType\":\"uint32\",\"name\":\"gapHalvingPeriod\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"},{\"internalType\":\"contractIERC20Metadata\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"minLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"serviceFeePercent\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"allowsPerpetual\",\"type\":\"bool\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractEnterprise\",\"name\":\"enterprise\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"name\":\"isAllowedLoanDuration\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowTokenId\",\"type\":\"uint256\"}],\"name\":\"notifyNewLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint112\",\"name\":\"baseRate\",\"type\":\"uint112\"},{\"internalType\":\"contractIERC20Metadata\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"minGCFee\",\"type\":\"uint96\"}],\"name\":\"setBaseRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"minLoanDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxLoanDuration\",\"type\":\"uint32\"}],\"name\":\"setLoanDurationLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newServiceFeePercent\",\"type\":\"uint16\"}],\"name\":\"setServiceFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"wrapTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561001057600080fd5b50613796806100206000396000f3fe608060405234801561001057600080fd5b50600436106101ee5760003560e01c806306fdde03146101f3578063095ea7b3146102115780630aff9d19146102345780630d148ab61461025f57806313e7e63b14610274578063146637011461029a5780631624f6c6146102bb57806318160ddd146102ce5780631bab58f5146102d657806323b872dd1461038657806325d998bb1461039957806327256486146103ac5780632ef0cf8b146103b4578063313ce567146103c757806333bebb77146103dc57806339509351146103ef57806340c10f191461040257806342bb702e146104155780635370028e1461042a5780635932f4ff146104555780635a9b0b891461046a5780636dfbee1b146104895780636e4d8983146104ab57806370a08231146104be578063759c8be3146104d157806379cc6790146104e457806381045ead146104f7578063927c9d871461050a57806395d89b411461051c57806398acd7a6146105245780639d5513d71461053e5780639f126fbe1461057b578063a457c2d71461058e578063a9059cbb146105a1578063b655d0c4146105b4578063c0434352146105c5578063c4d66de8146105d8578063dd62ed3e146105eb578063de0e9a3e14610624578063e298a2fd14610637578063ea598cb01461063f578063f8642f2914610652575b600080fd5b6101fb610663565b604051610208919061327c565b60405180910390f35b61022461021f366004612ea8565b6106f5565b6040519015158152602001610208565b600154600160701b90046001600160601b03166040516001600160601b039091168152602001610208565b61027261026d366004613144565b61070c565b005b600254600160a01b900463ffffffff165b60405163ffffffff9091168152602001610208565b6102ad6102a8366004612fe8565b610859565b604051908152602001610208565b6102726102c9366004613095565b61089c565b6006546102ad565b6103506102e4366004612df8565b6040805160608082018352600080835260208084018290529284018190526001600160a01b03949094168452600382529282902082519384018352546001600160701b038082168552600160701b82041691840191909152600160e01b900463ffffffff169082015290565b6040805182516001600160701b039081168252602080850151909116908201529181015163ffffffff1690820152606001610208565b610224610394366004612e68565b610922565b6102ad6103a7366004612df8565b6109b1565b6102726109e6565b6102726103c2366004612f23565b610b16565b60095460405160ff9091168152602001610208565b6102246103ea366004612e68565b610e03565b6102246103fd366004612ea8565b610e60565b610272610410366004612ea8565b610e97565b600154600160d01b900463ffffffff16610285565b61043d610438366004612ed3565b610eec565b6040516001600160701b039091168152602001610208565b600254600160c01b900463ffffffff16610285565b610472610f52565b6040516102089b9a9998979695949392919061328f565b600254600160e01b900461ffff165b60405161ffff9091168152602001610208565b6102246104b93660046131cf565b6110d1565b6102ad6104cc366004612df8565b61110b565b6102726104df366004613109565b611126565b6102726104f2366004612ea8565b6112a0565b600154600160f01b900461ffff16610498565b600254600160f01b900460ff16610224565b6101fb6112f1565b6002546001600160a01b03165b6040516102089190613268565b61055161054c366004612fe8565b611300565b604080516001600160701b0394851681529284166020840152921691810191909152606001610208565b610224610589366004612ea8565b61131f565b61022461059c366004612ea8565b61132b565b6102246105af366004612ea8565b611399565b6001546001600160701b031661043d565b6102726105d33660046131e9565b6113a8565b6102726105e6366004612df8565b61151b565b6102ad6105f9366004612e30565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b61022461063236600461317c565b6115c2565b610531611665565b61022461064d36600461317c565b611674565b61027261066036600461317c565b50565b606060078054610672906135f9565b80601f016020809104026020016040519081016040528092919081815260200182805461069e906135f9565b80156106eb5780601f106106c0576101008083540402835291602001916106eb565b820191906000526020600020905b8154815290600101906020018083116106ce57829003601f168201915b5050505050905090565b6000610702338484611680565b5060015b92915050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561075057600080fd5b505afa158015610764573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107889190612e14565b6001600160a01b031614604051806040016040528060018152602001603360f81b815250906107d35760405162461bcd60e51b81526004016107ca919061327c565b60405180910390fd5b50604080518082019091526002815261363760f01b602082015261138861ffff831611156108145760405162461bcd60e51b81526004016107ca919061327c565b506002805461ffff60e01b1916600160e01b61ffff8416908102919091179091556040519081526000805160206137218339815191529060200160405180910390a150565b60008060008061086a878787611764565b919450925090508061087c83856133dd565b61088691906133dd565b6001600160701b031693505050505b9392505050565b600780546108a9906135f9565b6040805180820190915260018152601960f91b60208201529150156108e15760405162461bcd60e51b81526004016107ca919061327c565b5082516108f5906007906020860190612cc7565b508151610909906008906020850190612cc7565b506009805460ff191660ff929092169190911790555050565b600061093184848460006119db565b6001600160a01b03841660009081526005602090815260408083203384528252918290205482518084019093526002835261031360f41b9183019190915290838210156109915760405162461bcd60e51b81526004016107ca919061327c565b506109a685336109a186856135b6565b611680565b506001949350505050565b6001600160a01b0381166000908152600360205260408120546001600160701b03166109dc8361110b565b61070691906135b6565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610a2a57600080fd5b505afa158015610a3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a629190612e14565b6001600160a01b031614604051806040016040528060018152602001603360f81b81525090610aa45760405162461bcd60e51b81526004016107ca919061327c565b50600280546040805180820190915291825261037360f41b6020830152600160f01b900460ff1615610ae95760405162461bcd60e51b81526004016107ca919061327c565b506002805460ff60f01b1916600160f01b1790556040516000805160206136c183398151915290600090a1565b6001805460408051808201909152918252601960f91b6020830152600160d01b900463ffffffff1615610b5c5760405162461bcd60e51b81526004016107ca919061327c565b50604080518082019091526002815261343360f01b602082015263ffffffff8816610b9a5760405162461bcd60e51b81526004016107ca919061327c565b50604080518082019091526002815261363760f01b602082015261138861ffff84161115610bdb5760405162461bcd60e51b81526004016107ca919061327c565b506002805460408051808201909152918252611a1960f11b602083015263ffffffff600160c01b82048116600160a01b909204161115610c2e5760405162461bcd60e51b81526004016107ca919061327c565b50610c388a61151b565b88600160006101000a8154816001600160701b0302191690836001600160701b03160217905550876001600e6101000a8154816001600160601b0302191690836001600160601b03160217905550866001601a6101000a81548163ffffffff021916908363ffffffff160217905550856001601e6101000a81548161ffff021916908361ffff16021790555084600260006101000a8154816001600160a01b0302191690836001600160a01b0316021790555083600260146101000a81548163ffffffff021916908363ffffffff16021790555082600260186101000a81548163ffffffff021916908363ffffffff160217905550816002601c6101000a81548161ffff021916908361ffff160217905550806002601e6101000a81548160ff02191690831515021790555060008051602061374183398151915289868a604051610d859392919061333c565b60405180910390a160405161ffff831681526000805160206137218339815191529060200160405180910390a16000805160206136e18339815191528484604051610dd192919061336f565b60405180910390a18015610df7576040516000805160206136c183398151915290600090a15b50505050505050505050565b600080546040805180820190915260018152600d60fa1b6020820152906001600160a01b03163314610e485760405162461bcd60e51b81526004016107ca919061327c565b50610e5684848460016119db565b5060019392505050565b3360008181526005602090815260408083206001600160a01b038716845290915281205490916107029185906109a1908690613408565b6000546040805180820190915260018152600d60fa1b6020820152906001600160a01b03163314610edb5760405162461bcd60e51b81526004016107ca919061327c565b50610ee882826001611b4b565b5050565b6001600160a01b0382166000908152600360209081526040808320815160608101835290546001600160701b038082168352600160701b82041693820193909352600160e01b90920463ffffffff1690820152610f4a818585611c09565b949350505050565b6060806000806000806000806000806000306001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610f9c57600080fd5b505afa158015610fb0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fd8919081019061302c565b306001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561101157600080fd5b505afa158015611025573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261104d919081019061302c565b600154600254929e919d506001600160701b0381169c50600160701b81046001600160601b03169b50600160d01b810463ffffffff9081169b50600160f01b9182900461ffff9081169b506001600160a01b0385169a50600160a01b850482169950600160c01b85049091169750600160e01b840416955090910460ff1692509050565b60025460009063ffffffff808416600160a01b9092041611801590610706575050600254600160c01b900463ffffffff9081169116111590565b6001600160a01b031660009081526004602052604090205490565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561116a57600080fd5b505afa15801561117e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a29190612e14565b6001600160a01b031614604051806040016040528060018152602001603360f81b815250906111e45760405162461bcd60e51b81526004016107ca919061327c565b5060028054604080518082019091529182526106c760f31b60208301526001600160a01b03166112275760405162461bcd60e51b81526004016107ca919061327c565b5060018054600280546001600160a01b0319166001600160a01b0386161790556001600160701b0385166001600160d01b031990911617600160701b6001600160601b03841602179055604051600080516020613741833981519152906112939085908590859061333c565b60405180910390a1505050565b6000546040805180820190915260018152600d60fa1b6020820152906001600160a01b031633146112e45760405162461bcd60e51b81526004016107ca919061327c565b50610ee882826001611c97565b606060088054610672906135f9565b6000806000611310868686611764565b92509250925093509350939050565b60006108958383611db0565b3360009081526005602090815260408083206001600160a01b038616845282528083205481518083019092526002825261313160f01b92820192909252838210156113895760405162461bcd60e51b81526004016107ca919061327c565b50610e5633856109a186856135b6565b600061070233848460006119db565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b1580156113ec57600080fd5b505afa158015611400573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114249190612e14565b6001600160a01b031614604051806040016040528060018152602001603360f81b815250906114665760405162461bcd60e51b81526004016107ca919061327c565b508063ffffffff168263ffffffff16111560405180604001604052806002815260200161363960f01b815250906114b05760405162461bcd60e51b81526004016107ca919061327c565b506002805463ffffffff838116600160c01b0263ffffffff60c01b19918616600160a01b0291909116600160a01b600160e01b0319909216919091171790556040516000805160206136e18339815191529061150f908490849061336f565b60405180910390a15050565b6000546040805180820190915260018152601960f91b6020820152906001600160a01b03161561155e5760405162461bcd60e51b81526004016107ca919061327c565b50604080518082019091526002815261353960f01b60208201526001600160a01b03821661159f5760405162461bcd60e51b81526004016107ca919061327c565b50600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006115d033836000611c97565b61165d33836115dd611665565b6001600160a01b031663644e44df6040518163ffffffff1660e01b815260040160206040518083038186803b15801561161557600080fd5b505afa158015611629573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164d9190612e14565b6001600160a01b03169190611e93565b506001919050565b6000546001600160a01b031690565b60006107063383611db0565b604080518082019091526002815261062760f31b60208201526001600160a01b0384166116c05760405162461bcd60e51b81526004016107ca919061327c565b50604080518082019091526002815261313960f01b60208201526001600160a01b0383166117015760405162461bcd60e51b81526004016107ca919061327c565b506001600160a01b0383811660008181526005602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000806000611771611665565b6001600160a01b0316632fb2067f876040518263ffffffff1660e01b815260040161179c9190613268565b60206040518083038186803b1580156117b457600080fd5b505afa1580156117c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ec9190612f07565b604051806040016040528060028152602001610d0d60f21b815250906118255760405162461bcd60e51b81526004016107ca919061327c565b5061182f846110d1565b60405180604001604052806002815260200161343560f01b815250906118685760405162461bcd60e51b81526004016107ca919061327c565b5060006118758686611efb565b90506000611881611665565b6001600160a01b0316632261b07f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156118b957600080fd5b505afa1580156118cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f19190612e14565b6002546040516314fdc96760e11b81526001600160a01b0391821660048201526001600160701b03851660248201528a821660448201529116906329fb92ce9060640160206040518083038186803b15801561194c57600080fd5b505afa158015611960573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119849190613194565b600254909150612710906119a390600160e01b900461ffff168361352e565b6119ad9190613420565b93506119c26001600160701b038516826135b6565b94506119ce888261225d565b9250505093509350939050565b604080518082019091526002815261189960f11b60208201526001600160a01b038516611a1b5760405162461bcd60e51b81526004016107ca919061327c565b50604080518082019091526002815261313360f01b60208201526001600160a01b038416611a5c5760405162461bcd60e51b81526004016107ca919061327c565b50611a6984848484612438565b6001600160a01b03841660009081526004602090815260409182902054825180840190935260028352610c4d60f21b918301919091529083821015611ac15760405162461bcd60e51b81526004016107ca919061327c565b50611acc83826135b6565b6001600160a01b038087166000908152600460205260408082209390935590861681529081208054859290611b02908490613408565b92505081905550836001600160a01b0316856001600160a01b031660008051602061370183398151915285604051611b3c91815260200190565b60405180910390a35050505050565b604080518082019091526002815261313560f01b60208201526001600160a01b038416611b8b5760405162461bcd60e51b81526004016107ca919061327c565b50611b996000848484612438565b8160066000828254611bab9190613408565b90915550506001600160a01b03831660009081526004602052604081208054849290611bd8908490613408565b90915550506040518281526001600160a01b0384169060009060008051602061370183398151915290602001611757565b600080611c158461110b565b905084602001516001600160701b0316816001600160701b03161115611c7557611c638560400151866020015183611c4d919061358e565b600154600160d01b900463ffffffff16866126db565b611c6d908261358e565b915050610895565b611c8d8560400151828760200151611c4d919061358e565b611c6d90826133dd565b604080518082019091526002815261189b60f11b60208201526001600160a01b038416611cd75760405162461bcd60e51b81526004016107ca919061327c565b50611ce58360008484612438565b6001600160a01b0383166000908152600460209081526040918290205482518084019093526002835261313760f01b918301919091529083821015611d3d5760405162461bcd60e51b81526004016107ca919061327c565b50611d4883826135b6565b6001600160a01b03851660009081526004602052604081209190915560068054859290611d769084906135b6565b90915550506040518381526000906001600160a01b038616906000805160206137018339815191529060200160405180910390a350505050565b600280546040805180820190915291825261353160f01b602083015260009190600160f01b900460ff16611df75760405162461bcd60e51b81526004016107ca919061327c565b50611e87333084611e06611665565b6001600160a01b031663644e44df6040518163ffffffff1660e01b815260040160206040518083038186803b158015611e3e57600080fd5b505afa158015611e52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e769190612e14565b6001600160a01b031692919061287c565b61070283836000611b4b565b6040516001600160a01b038316602482015260448101829052611ef690849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526128ba565b505050565b600080611f06611665565b6001600160a01b031663aebb50416040518163ffffffff1660e01b815260040160206040518083038186803b158015611f3e57600080fd5b505afa158015611f52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f769190613194565b9050836001600160701b03168111611f98576001600160701b03915050610706565b6002546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b158015611fdd57600080fd5b505afa158015611ff1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120159190613204565b61201d611665565b6001600160a01b031663644e44df6040518163ffffffff1660e01b815260040160206040518083038186803b15801561205557600080fd5b505afa158015612069573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061208d9190612e14565b6001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156120c557600080fd5b505afa1580156120d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120fd9190613204565b612107919061354d565b9050600080612114611665565b6001600160a01b031663faac38ef6040518163ffffffff1660e01b8152600401604080518083038186803b15801561214b57600080fd5b505afa15801561215f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061218391906131ac565b9150915060008663ffffffff166121a4896001600160701b0316858561298c565b6121ae919061352e565b905060008460000b13156121f25760406121c985600a613483565b6001546121df906001600160701b03168461352e565b6121e99190613420565b901c9050612252565b60008460000b121561223457604061220985613634565b61221490600a613483565b60015461222a906001600160701b03168461352e565b6121e9919061352e565b60015460409061224d906001600160701b03168361352e565b901c90505b979650505050505050565b60008061271061226b611665565b6001600160a01b031663b406bf6d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156122a357600080fd5b505afa1580156122b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122db9190613160565b6122e99061ffff168561352e565b6122f39190613420565b905060006122ff611665565b6001600160a01b0316632261b07f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561233757600080fd5b505afa15801561234b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236f9190612e14565b6002546001546040516314fdc96760e11b81526001600160a01b039283166004820152600160701b9091046001600160601b0316602482015287821660448201529116906329fb92ce9060640160206040518083038186803b1580156123d457600080fd5b505afa1580156123e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061240c9190613194565b9050806001600160701b0316826001600160701b03161061242d578161242f565b805b95945050505050565b426001600160a01b038516156125b6576001600160a01b038516600090815260036020908152604091829020825160608101845290546001600160701b038082168352600160701b82041692820192909252600160e01b90910463ffffffff16918101919091526124aa818784611c09565b6001600160701b0316602082015263ffffffff82166040820152826125295780516001600160701b0316846124de8861110b565b6124e891906135b6565b1015604051806040016040528060028152602001610dcd60f21b815250906125235760405162461bcd60e51b81526004016107ca919061327c565b50612548565b838160000181815161253b919061358e565b6001600160701b03169052505b6001600160a01b0386166000908152600360209081526040918290208351815492850151939094015163ffffffff16600160e01b026001600160e01b036001600160701b03948516600160701b026001600160e01b0319909416949095169390931791909117929092161790555b6001600160a01b038416156126d4576001600160a01b038416600090815260036020908152604091829020825160608101845290546001600160701b038082168352600160701b82041692820192909252600160e01b90910463ffffffff1691810191909152612627818684611c09565b6001600160701b0316602082015263ffffffff82166040820152821561266657838160000181815161265991906133dd565b6001600160701b03169052505b6001600160a01b0385166000908152600360209081526040918290208351815492850151939094015163ffffffff16600160e01b026001600160e01b036001600160701b03948516600160701b026001600160e01b0319909416949095169390931791909117929092161790555b5050505050565b60008463ffffffff168263ffffffff161015604051806040016040528060018152602001600760fb1b815250906127255760405162461bcd60e51b81526004016107ca919061327c565b5084820391508263ffffffff168263ffffffff168161275457634e487b7160e01b600052601260045260246000fd5b0463ffffffff16846001600160701b0316901c93508263ffffffff168263ffffffff168161279257634e487b7160e01b600052601260045260246000fd5b06915063ffffffff821615806127af57506001600160701b038416155b156127bb575082610f4a565b60006001600160701b0385168163ffffffff86811690861671b17217f7d1cf79abc9e3b39803f2f6af40f3028161280257634e487b7160e01b600052601260045260246000fd5b049050600160901b5b821561286f5792820192808284028161283457634e487b7160e01b600052601260045260246000fd5b0493849003939250600160901b01808284028161286157634e487b7160e01b600052601260045260246000fd5b049250600160901b0161280b565b5091979650505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526128b49085906323b872dd60e01b90608401611ebf565b50505050565b600061290f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612ac39092919063ffffffff16565b805190915015611ef6578080602001905181019061292d9190612f07565b611ef65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107ca565b600080612997611665565b6001600160a01b031663fcb2884e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156129cf57600080fd5b505afa1580156129e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a079190613194565b90506000612a13611665565b6001600160a01b03166359bf5d396040518163ffffffff1660e01b815260040160206040518083038186803b158015612a4b57600080fd5b505afa158015612a5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a839190613194565b9050612a9182868684612ad2565b612aaf612aa76001600160801b03891685613408565b878785612ad2565b612ab991906135b6565b9695505050505050565b6060610f4a8484600085612b15565b60006040612b008382612ae589836135b6565b612af092911b613420565b6001600160801b03168686612c32565b612b0a908761352e565b901c95945050505050565b606082471015612b765760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016107ca565b843b612bc45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107ca565b600080866001600160a01b03168587604051612be0919061324c565b60006040518083038185875af1925050503d8060008114612c1d576040519150601f19603f3d011682016040523d82523d6000602084013e612c22565b606091505b5091509150612252828286612c8e565b6000828411612c4957506001600160801b03610895565b612c5782600160401b6135b6565b612c6184866135b6565b83612c7086600160401b6135b6565b612c7a919061352e565b612c849190613420565b610f4a9190613408565b60608315612c9d575081610895565b825115612cad5782518084602001fd5b8160405162461bcd60e51b81526004016107ca919061327c565b828054612cd3906135f9565b90600052602060002090601f016020900481019282612cf55760008555612d3b565b82601f10612d0e57805160ff1916838001178555612d3b565b82800160010185558215612d3b579182015b82811115612d3b578251825591602001919060010190612d20565b50612d47929150612d4b565b5090565b5b80821115612d475760008155600101612d4c565b600082601f830112612d70578081fd5b8135612d83612d7e826133b6565b613386565b818152846020838601011115612d97578283fd5b816020850160208301379081016020019190915292915050565b80356001600160701b0381168114612dc857600080fd5b919050565b803563ffffffff81168114612dc857600080fd5b80356001600160601b0381168114612dc857600080fd5b600060208284031215612e09578081fd5b81356108958161367e565b600060208284031215612e25578081fd5b81516108958161367e565b60008060408385031215612e42578081fd5b8235612e4d8161367e565b91506020830135612e5d8161367e565b809150509250929050565b600080600060608486031215612e7c578081fd5b8335612e878161367e565b92506020840135612e978161367e565b929592945050506040919091013590565b60008060408385031215612eba578182fd5b8235612ec58161367e565b946020939093013593505050565b60008060408385031215612ee5578182fd5b8235612ef08161367e565b9150612efe60208401612dcd565b90509250929050565b600060208284031215612f18578081fd5b815161089581613693565b6000806000806000806000806000806101408b8d031215612f42578788fd5b8a35612f4d8161367e565b9950612f5b60208c01612db1565b9850612f6960408c01612de1565b9750612f7760608c01612dcd565b965060808b0135612f87816136a1565b955060a08b0135612f978161367e565b9450612fa560c08c01612dcd565b9350612fb360e08c01612dcd565b92506101008b0135612fc4816136a1565b91506101208b0135612fd581613693565b809150509295989b9194979a5092959850565b600080600060608486031215612ffc578081fd5b83356130078161367e565b925061301560208501612db1565b915061302360408501612dcd565b90509250925092565b60006020828403121561303d578081fd5b81516001600160401b03811115613052578182fd5b8201601f81018413613062578182fd5b8051613070612d7e826133b6565b818152856020838501011115613084578384fd5b61242f8260208301602086016135cd565b6000806000606084860312156130a9578081fd5b83356001600160401b03808211156130bf578283fd5b6130cb87838801612d60565b945060208601359150808211156130e0578283fd5b506130ed86828701612d60565b92505060408401356130fe816136b1565b809150509250925092565b60008060006060848603121561311d578081fd5b61312684612db1565b925060208401356131368161367e565b915061302360408501612de1565b600060208284031215613155578081fd5b8135610895816136a1565b600060208284031215613171578081fd5b8151610895816136a1565b60006020828403121561318d578081fd5b5035919050565b6000602082840312156131a5578081fd5b5051919050565b600080604083850312156131be578182fd5b505080516020909101519092909150565b6000602082840312156131e0578081fd5b61089582612dcd565b600080604083850312156131fb578182fd5b612ef083612dcd565b600060208284031215613215578081fd5b8151610895816136b1565b600081518084526132388160208601602086016135cd565b601f01601f19169290920160200192915050565b6000825161325e8184602087016135cd565b9190910192915050565b6001600160a01b0391909116815260200190565b6020815260006108956020830184613220565b60006101608083526132a38184018f613220565b905082810360208401526132b7818e613220565b6001600160701b038d1660408501526001600160601b038c16606085015263ffffffff8b8116608086015261ffff8b1660a08601526001600160a01b038a1660c0860152881660e0850152915061330b9050565b63ffffffff851661010083015261ffff84166101208301528215156101408301529c9b505050505050505050505050565b6001600160701b039390931683526001600160a01b039190911660208301526001600160601b0316604082015260600190565b63ffffffff92831681529116602082015260400190565b604051601f8201601f191681016001600160401b03811182821017156133ae576133ae613668565b604052919050565b60006001600160401b038211156133cf576133cf613668565b50601f01601f191660200190565b60006001600160701b038281168482168083038211156133ff576133ff613652565b01949350505050565b6000821982111561341b5761341b613652565b500190565b60008261343b57634e487b7160e01b81526012600452602481fd5b500490565b600181815b8085111561347b57816000190482111561346157613461613652565b8085161561346e57918102915b93841c9390800290613445565b509250929050565b600061089560ff84168360008261349c57506001610706565b816134a957506000610706565b81600181146134bf57600281146134c9576134e5565b6001915050610706565b60ff8411156134da576134da613652565b50506001821b610706565b5060208310610133831016604e8410600b8410161715613508575081810a610706565b6135128383613440565b806000190482111561352657613526613652565b029392505050565b600081600019048311821515161561354857613548613652565b500290565b600081810b83820b8281128015607f1983018412161561356f5761356f613652565b81607f01831381161561358457613584613652565b5090039392505050565b60006001600160701b03838116908316818110156135ae576135ae613652565b039392505050565b6000828210156135c8576135c8613652565b500390565b60005b838110156135e85781810151838201526020016135d0565b838111156128b45750506000910152565b600181811c9082168061360d57607f821691505b6020821081141561362e57634e487b7160e01b600052602260045260246000fd5b50919050565b600081810b607f1981141561364b5761364b613652565b9003919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461066057600080fd5b801515811461066057600080fd5b61ffff8116811461066057600080fd5b60ff8116811461066057600080fdfe772fb13db6d1f0f35034c4b28dbbb01644e39d7e8b38de2a93b3c9d1fbb1ad4a1ff66a89a0dcb0d94c8284280cbf0fb7190e7d935e15b6b48513e08b84fd9c7bddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef7b5d5b53df75c87d5bea0f0535cd81a355db537ee2ca5dcea9849433d99847b92833a6b2910014b082775316936860d808d821fc59634fa08bc19c19427fa99da264697066735822122026b8ee9bdeeaa6a2cd4dfe321acd0c0325de843a449c80f4b493fdf95eedade764736f6c63430008040033",
}

// PowerTokenABI is the input ABI used to generate the binding from.
// Deprecated: Use PowerTokenMetaData.ABI instead.
var PowerTokenABI = PowerTokenMetaData.ABI

// PowerTokenBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use PowerTokenMetaData.Bin instead.
var PowerTokenBin = PowerTokenMetaData.Bin

// DeployPowerToken deploys a new Ethereum contract, binding an instance of PowerToken to it.
func DeployPowerToken(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *PowerToken, error) {
	parsed, err := PowerTokenMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(PowerTokenBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &PowerToken{PowerTokenCaller: PowerTokenCaller{contract: contract}, PowerTokenTransactor: PowerTokenTransactor{contract: contract}, PowerTokenFilterer: PowerTokenFilterer{contract: contract}}, nil
}

// PowerToken is an auto generated Go binding around an Ethereum contract.
type PowerToken struct {
	PowerTokenCaller     // Read-only binding to the contract
	PowerTokenTransactor // Write-only binding to the contract
	PowerTokenFilterer   // Log filterer for contract events
}

// PowerTokenCaller is an auto generated read-only Go binding around an Ethereum contract.
type PowerTokenCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// PowerTokenTransactor is an auto generated write-only Go binding around an Ethereum contract.
type PowerTokenTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// PowerTokenFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type PowerTokenFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// PowerTokenSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type PowerTokenSession struct {
	Contract     *PowerToken       // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// PowerTokenCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type PowerTokenCallerSession struct {
	Contract *PowerTokenCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts     // Call options to use throughout this session
}

// PowerTokenTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type PowerTokenTransactorSession struct {
	Contract     *PowerTokenTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// PowerTokenRaw is an auto generated low-level Go binding around an Ethereum contract.
type PowerTokenRaw struct {
	Contract *PowerToken // Generic contract binding to access the raw methods on
}

// PowerTokenCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type PowerTokenCallerRaw struct {
	Contract *PowerTokenCaller // Generic read-only contract binding to access the raw methods on
}

// PowerTokenTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type PowerTokenTransactorRaw struct {
	Contract *PowerTokenTransactor // Generic write-only contract binding to access the raw methods on
}

// NewPowerToken creates a new instance of PowerToken, bound to a specific deployed contract.
func NewPowerToken(address common.Address, backend bind.ContractBackend) (*PowerToken, error) {
	contract, err := bindPowerToken(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &PowerToken{PowerTokenCaller: PowerTokenCaller{contract: contract}, PowerTokenTransactor: PowerTokenTransactor{contract: contract}, PowerTokenFilterer: PowerTokenFilterer{contract: contract}}, nil
}

// NewPowerTokenCaller creates a new read-only instance of PowerToken, bound to a specific deployed contract.
func NewPowerTokenCaller(address common.Address, caller bind.ContractCaller) (*PowerTokenCaller, error) {
	contract, err := bindPowerToken(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &PowerTokenCaller{contract: contract}, nil
}

// NewPowerTokenTransactor creates a new write-only instance of PowerToken, bound to a specific deployed contract.
func NewPowerTokenTransactor(address common.Address, transactor bind.ContractTransactor) (*PowerTokenTransactor, error) {
	contract, err := bindPowerToken(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &PowerTokenTransactor{contract: contract}, nil
}

// NewPowerTokenFilterer creates a new log filterer instance of PowerToken, bound to a specific deployed contract.
func NewPowerTokenFilterer(address common.Address, filterer bind.ContractFilterer) (*PowerTokenFilterer, error) {
	contract, err := bindPowerToken(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &PowerTokenFilterer{contract: contract}, nil
}

// bindPowerToken binds a generic wrapper to an already deployed contract.
func bindPowerToken(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(PowerTokenABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_PowerToken *PowerTokenRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _PowerToken.Contract.PowerTokenCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_PowerToken *PowerTokenRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _PowerToken.Contract.PowerTokenTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_PowerToken *PowerTokenRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _PowerToken.Contract.PowerTokenTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_PowerToken *PowerTokenCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _PowerToken.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_PowerToken *PowerTokenTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _PowerToken.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_PowerToken *PowerTokenTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _PowerToken.Contract.contract.Transact(opts, method, params...)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_PowerToken *PowerTokenCaller) Allowance(opts *bind.CallOpts, owner common.Address, spender common.Address) (*big.Int, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "allowance", owner, spender)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_PowerToken *PowerTokenSession) Allowance(owner common.Address, spender common.Address) (*big.Int, error) {
	return _PowerToken.Contract.Allowance(&_PowerToken.CallOpts, owner, spender)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_PowerToken *PowerTokenCallerSession) Allowance(owner common.Address, spender common.Address) (*big.Int, error) {
	return _PowerToken.Contract.Allowance(&_PowerToken.CallOpts, owner, spender)
}

// AvailableBalanceOf is a free data retrieval call binding the contract method 0x25d998bb.
//
// Solidity: function availableBalanceOf(address account) view returns(uint256)
func (_PowerToken *PowerTokenCaller) AvailableBalanceOf(opts *bind.CallOpts, account common.Address) (*big.Int, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "availableBalanceOf", account)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// AvailableBalanceOf is a free data retrieval call binding the contract method 0x25d998bb.
//
// Solidity: function availableBalanceOf(address account) view returns(uint256)
func (_PowerToken *PowerTokenSession) AvailableBalanceOf(account common.Address) (*big.Int, error) {
	return _PowerToken.Contract.AvailableBalanceOf(&_PowerToken.CallOpts, account)
}

// AvailableBalanceOf is a free data retrieval call binding the contract method 0x25d998bb.
//
// Solidity: function availableBalanceOf(address account) view returns(uint256)
func (_PowerToken *PowerTokenCallerSession) AvailableBalanceOf(account common.Address) (*big.Int, error) {
	return _PowerToken.Contract.AvailableBalanceOf(&_PowerToken.CallOpts, account)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_PowerToken *PowerTokenCaller) BalanceOf(opts *bind.CallOpts, account common.Address) (*big.Int, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "balanceOf", account)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_PowerToken *PowerTokenSession) BalanceOf(account common.Address) (*big.Int, error) {
	return _PowerToken.Contract.BalanceOf(&_PowerToken.CallOpts, account)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_PowerToken *PowerTokenCallerSession) BalanceOf(account common.Address) (*big.Int, error) {
	return _PowerToken.Contract.BalanceOf(&_PowerToken.CallOpts, account)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_PowerToken *PowerTokenCaller) Decimals(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "decimals")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_PowerToken *PowerTokenSession) Decimals() (uint8, error) {
	return _PowerToken.Contract.Decimals(&_PowerToken.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_PowerToken *PowerTokenCallerSession) Decimals() (uint8, error) {
	return _PowerToken.Contract.Decimals(&_PowerToken.CallOpts)
}

// EnergyAt is a free data retrieval call binding the contract method 0x5370028e.
//
// Solidity: function energyAt(address who, uint32 timestamp) view returns(uint112)
func (_PowerToken *PowerTokenCaller) EnergyAt(opts *bind.CallOpts, who common.Address, timestamp uint32) (*big.Int, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "energyAt", who, timestamp)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// EnergyAt is a free data retrieval call binding the contract method 0x5370028e.
//
// Solidity: function energyAt(address who, uint32 timestamp) view returns(uint112)
func (_PowerToken *PowerTokenSession) EnergyAt(who common.Address, timestamp uint32) (*big.Int, error) {
	return _PowerToken.Contract.EnergyAt(&_PowerToken.CallOpts, who, timestamp)
}

// EnergyAt is a free data retrieval call binding the contract method 0x5370028e.
//
// Solidity: function energyAt(address who, uint32 timestamp) view returns(uint112)
func (_PowerToken *PowerTokenCallerSession) EnergyAt(who common.Address, timestamp uint32) (*big.Int, error) {
	return _PowerToken.Contract.EnergyAt(&_PowerToken.CallOpts, who, timestamp)
}

// EstimateLoan is a free data retrieval call binding the contract method 0x14663701.
//
// Solidity: function estimateLoan(address paymentToken, uint112 amount, uint32 duration) view returns(uint256)
func (_PowerToken *PowerTokenCaller) EstimateLoan(opts *bind.CallOpts, paymentToken common.Address, amount *big.Int, duration uint32) (*big.Int, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "estimateLoan", paymentToken, amount, duration)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// EstimateLoan is a free data retrieval call binding the contract method 0x14663701.
//
// Solidity: function estimateLoan(address paymentToken, uint112 amount, uint32 duration) view returns(uint256)
func (_PowerToken *PowerTokenSession) EstimateLoan(paymentToken common.Address, amount *big.Int, duration uint32) (*big.Int, error) {
	return _PowerToken.Contract.EstimateLoan(&_PowerToken.CallOpts, paymentToken, amount, duration)
}

// EstimateLoan is a free data retrieval call binding the contract method 0x14663701.
//
// Solidity: function estimateLoan(address paymentToken, uint112 amount, uint32 duration) view returns(uint256)
func (_PowerToken *PowerTokenCallerSession) EstimateLoan(paymentToken common.Address, amount *big.Int, duration uint32) (*big.Int, error) {
	return _PowerToken.Contract.EstimateLoan(&_PowerToken.CallOpts, paymentToken, amount, duration)
}

// EstimateLoanDetailed is a free data retrieval call binding the contract method 0x9d5513d7.
//
// Solidity: function estimateLoanDetailed(address paymentToken, uint112 amount, uint32 duration) view returns(uint112 interest, uint112 serviceFee, uint112 gcFee)
func (_PowerToken *PowerTokenCaller) EstimateLoanDetailed(opts *bind.CallOpts, paymentToken common.Address, amount *big.Int, duration uint32) (struct {
	Interest   *big.Int
	ServiceFee *big.Int
	GcFee      *big.Int
}, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "estimateLoanDetailed", paymentToken, amount, duration)

	outstruct := new(struct {
		Interest   *big.Int
		ServiceFee *big.Int
		GcFee      *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Interest = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.ServiceFee = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.GcFee = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// EstimateLoanDetailed is a free data retrieval call binding the contract method 0x9d5513d7.
//
// Solidity: function estimateLoanDetailed(address paymentToken, uint112 amount, uint32 duration) view returns(uint112 interest, uint112 serviceFee, uint112 gcFee)
func (_PowerToken *PowerTokenSession) EstimateLoanDetailed(paymentToken common.Address, amount *big.Int, duration uint32) (struct {
	Interest   *big.Int
	ServiceFee *big.Int
	GcFee      *big.Int
}, error) {
	return _PowerToken.Contract.EstimateLoanDetailed(&_PowerToken.CallOpts, paymentToken, amount, duration)
}

// EstimateLoanDetailed is a free data retrieval call binding the contract method 0x9d5513d7.
//
// Solidity: function estimateLoanDetailed(address paymentToken, uint112 amount, uint32 duration) view returns(uint112 interest, uint112 serviceFee, uint112 gcFee)
func (_PowerToken *PowerTokenCallerSession) EstimateLoanDetailed(paymentToken common.Address, amount *big.Int, duration uint32) (struct {
	Interest   *big.Int
	ServiceFee *big.Int
	GcFee      *big.Int
}, error) {
	return _PowerToken.Contract.EstimateLoanDetailed(&_PowerToken.CallOpts, paymentToken, amount, duration)
}

// GetAllowsPerpetual is a free data retrieval call binding the contract method 0x927c9d87.
//
// Solidity: function getAllowsPerpetual() view returns(bool)
func (_PowerToken *PowerTokenCaller) GetAllowsPerpetual(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getAllowsPerpetual")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// GetAllowsPerpetual is a free data retrieval call binding the contract method 0x927c9d87.
//
// Solidity: function getAllowsPerpetual() view returns(bool)
func (_PowerToken *PowerTokenSession) GetAllowsPerpetual() (bool, error) {
	return _PowerToken.Contract.GetAllowsPerpetual(&_PowerToken.CallOpts)
}

// GetAllowsPerpetual is a free data retrieval call binding the contract method 0x927c9d87.
//
// Solidity: function getAllowsPerpetual() view returns(bool)
func (_PowerToken *PowerTokenCallerSession) GetAllowsPerpetual() (bool, error) {
	return _PowerToken.Contract.GetAllowsPerpetual(&_PowerToken.CallOpts)
}

// GetBaseRate is a free data retrieval call binding the contract method 0xb655d0c4.
//
// Solidity: function getBaseRate() view returns(uint112)
func (_PowerToken *PowerTokenCaller) GetBaseRate(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getBaseRate")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetBaseRate is a free data retrieval call binding the contract method 0xb655d0c4.
//
// Solidity: function getBaseRate() view returns(uint112)
func (_PowerToken *PowerTokenSession) GetBaseRate() (*big.Int, error) {
	return _PowerToken.Contract.GetBaseRate(&_PowerToken.CallOpts)
}

// GetBaseRate is a free data retrieval call binding the contract method 0xb655d0c4.
//
// Solidity: function getBaseRate() view returns(uint112)
func (_PowerToken *PowerTokenCallerSession) GetBaseRate() (*big.Int, error) {
	return _PowerToken.Contract.GetBaseRate(&_PowerToken.CallOpts)
}

// GetBaseToken is a free data retrieval call binding the contract method 0x98acd7a6.
//
// Solidity: function getBaseToken() view returns(address)
func (_PowerToken *PowerTokenCaller) GetBaseToken(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getBaseToken")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetBaseToken is a free data retrieval call binding the contract method 0x98acd7a6.
//
// Solidity: function getBaseToken() view returns(address)
func (_PowerToken *PowerTokenSession) GetBaseToken() (common.Address, error) {
	return _PowerToken.Contract.GetBaseToken(&_PowerToken.CallOpts)
}

// GetBaseToken is a free data retrieval call binding the contract method 0x98acd7a6.
//
// Solidity: function getBaseToken() view returns(address)
func (_PowerToken *PowerTokenCallerSession) GetBaseToken() (common.Address, error) {
	return _PowerToken.Contract.GetBaseToken(&_PowerToken.CallOpts)
}

// GetEnterprise is a free data retrieval call binding the contract method 0xe298a2fd.
//
// Solidity: function getEnterprise() view returns(address)
func (_PowerToken *PowerTokenCaller) GetEnterprise(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getEnterprise")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetEnterprise is a free data retrieval call binding the contract method 0xe298a2fd.
//
// Solidity: function getEnterprise() view returns(address)
func (_PowerToken *PowerTokenSession) GetEnterprise() (common.Address, error) {
	return _PowerToken.Contract.GetEnterprise(&_PowerToken.CallOpts)
}

// GetEnterprise is a free data retrieval call binding the contract method 0xe298a2fd.
//
// Solidity: function getEnterprise() view returns(address)
func (_PowerToken *PowerTokenCallerSession) GetEnterprise() (common.Address, error) {
	return _PowerToken.Contract.GetEnterprise(&_PowerToken.CallOpts)
}

// GetGapHalvingPeriod is a free data retrieval call binding the contract method 0x42bb702e.
//
// Solidity: function getGapHalvingPeriod() view returns(uint32)
func (_PowerToken *PowerTokenCaller) GetGapHalvingPeriod(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getGapHalvingPeriod")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// GetGapHalvingPeriod is a free data retrieval call binding the contract method 0x42bb702e.
//
// Solidity: function getGapHalvingPeriod() view returns(uint32)
func (_PowerToken *PowerTokenSession) GetGapHalvingPeriod() (uint32, error) {
	return _PowerToken.Contract.GetGapHalvingPeriod(&_PowerToken.CallOpts)
}

// GetGapHalvingPeriod is a free data retrieval call binding the contract method 0x42bb702e.
//
// Solidity: function getGapHalvingPeriod() view returns(uint32)
func (_PowerToken *PowerTokenCallerSession) GetGapHalvingPeriod() (uint32, error) {
	return _PowerToken.Contract.GetGapHalvingPeriod(&_PowerToken.CallOpts)
}

// GetIndex is a free data retrieval call binding the contract method 0x81045ead.
//
// Solidity: function getIndex() view returns(uint16)
func (_PowerToken *PowerTokenCaller) GetIndex(opts *bind.CallOpts) (uint16, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getIndex")

	if err != nil {
		return *new(uint16), err
	}

	out0 := *abi.ConvertType(out[0], new(uint16)).(*uint16)

	return out0, err

}

// GetIndex is a free data retrieval call binding the contract method 0x81045ead.
//
// Solidity: function getIndex() view returns(uint16)
func (_PowerToken *PowerTokenSession) GetIndex() (uint16, error) {
	return _PowerToken.Contract.GetIndex(&_PowerToken.CallOpts)
}

// GetIndex is a free data retrieval call binding the contract method 0x81045ead.
//
// Solidity: function getIndex() view returns(uint16)
func (_PowerToken *PowerTokenCallerSession) GetIndex() (uint16, error) {
	return _PowerToken.Contract.GetIndex(&_PowerToken.CallOpts)
}

// GetInfo is a free data retrieval call binding the contract method 0x5a9b0b89.
//
// Solidity: function getInfo() view returns(string name, string symbol, uint112 baseRate, uint96 minGCFee, uint32 gapHalvingPeriod, uint16 index, address baseToken, uint32 minLoanDuration, uint32 maxLoanDuration, uint16 serviceFeePercent, bool allowsPerpetual)
func (_PowerToken *PowerTokenCaller) GetInfo(opts *bind.CallOpts) (struct {
	Name              string
	Symbol            string
	BaseRate          *big.Int
	MinGCFee          *big.Int
	GapHalvingPeriod  uint32
	Index             uint16
	BaseToken         common.Address
	MinLoanDuration   uint32
	MaxLoanDuration   uint32
	ServiceFeePercent uint16
	AllowsPerpetual   bool
}, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getInfo")

	outstruct := new(struct {
		Name              string
		Symbol            string
		BaseRate          *big.Int
		MinGCFee          *big.Int
		GapHalvingPeriod  uint32
		Index             uint16
		BaseToken         common.Address
		MinLoanDuration   uint32
		MaxLoanDuration   uint32
		ServiceFeePercent uint16
		AllowsPerpetual   bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Name = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.Symbol = *abi.ConvertType(out[1], new(string)).(*string)
	outstruct.BaseRate = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.MinGCFee = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	outstruct.GapHalvingPeriod = *abi.ConvertType(out[4], new(uint32)).(*uint32)
	outstruct.Index = *abi.ConvertType(out[5], new(uint16)).(*uint16)
	outstruct.BaseToken = *abi.ConvertType(out[6], new(common.Address)).(*common.Address)
	outstruct.MinLoanDuration = *abi.ConvertType(out[7], new(uint32)).(*uint32)
	outstruct.MaxLoanDuration = *abi.ConvertType(out[8], new(uint32)).(*uint32)
	outstruct.ServiceFeePercent = *abi.ConvertType(out[9], new(uint16)).(*uint16)
	outstruct.AllowsPerpetual = *abi.ConvertType(out[10], new(bool)).(*bool)

	return *outstruct, err

}

// GetInfo is a free data retrieval call binding the contract method 0x5a9b0b89.
//
// Solidity: function getInfo() view returns(string name, string symbol, uint112 baseRate, uint96 minGCFee, uint32 gapHalvingPeriod, uint16 index, address baseToken, uint32 minLoanDuration, uint32 maxLoanDuration, uint16 serviceFeePercent, bool allowsPerpetual)
func (_PowerToken *PowerTokenSession) GetInfo() (struct {
	Name              string
	Symbol            string
	BaseRate          *big.Int
	MinGCFee          *big.Int
	GapHalvingPeriod  uint32
	Index             uint16
	BaseToken         common.Address
	MinLoanDuration   uint32
	MaxLoanDuration   uint32
	ServiceFeePercent uint16
	AllowsPerpetual   bool
}, error) {
	return _PowerToken.Contract.GetInfo(&_PowerToken.CallOpts)
}

// GetInfo is a free data retrieval call binding the contract method 0x5a9b0b89.
//
// Solidity: function getInfo() view returns(string name, string symbol, uint112 baseRate, uint96 minGCFee, uint32 gapHalvingPeriod, uint16 index, address baseToken, uint32 minLoanDuration, uint32 maxLoanDuration, uint16 serviceFeePercent, bool allowsPerpetual)
func (_PowerToken *PowerTokenCallerSession) GetInfo() (struct {
	Name              string
	Symbol            string
	BaseRate          *big.Int
	MinGCFee          *big.Int
	GapHalvingPeriod  uint32
	Index             uint16
	BaseToken         common.Address
	MinLoanDuration   uint32
	MaxLoanDuration   uint32
	ServiceFeePercent uint16
	AllowsPerpetual   bool
}, error) {
	return _PowerToken.Contract.GetInfo(&_PowerToken.CallOpts)
}

// GetMaxLoanDuration is a free data retrieval call binding the contract method 0x5932f4ff.
//
// Solidity: function getMaxLoanDuration() view returns(uint32)
func (_PowerToken *PowerTokenCaller) GetMaxLoanDuration(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getMaxLoanDuration")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// GetMaxLoanDuration is a free data retrieval call binding the contract method 0x5932f4ff.
//
// Solidity: function getMaxLoanDuration() view returns(uint32)
func (_PowerToken *PowerTokenSession) GetMaxLoanDuration() (uint32, error) {
	return _PowerToken.Contract.GetMaxLoanDuration(&_PowerToken.CallOpts)
}

// GetMaxLoanDuration is a free data retrieval call binding the contract method 0x5932f4ff.
//
// Solidity: function getMaxLoanDuration() view returns(uint32)
func (_PowerToken *PowerTokenCallerSession) GetMaxLoanDuration() (uint32, error) {
	return _PowerToken.Contract.GetMaxLoanDuration(&_PowerToken.CallOpts)
}

// GetMinGCFee is a free data retrieval call binding the contract method 0x0aff9d19.
//
// Solidity: function getMinGCFee() view returns(uint96)
func (_PowerToken *PowerTokenCaller) GetMinGCFee(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getMinGCFee")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetMinGCFee is a free data retrieval call binding the contract method 0x0aff9d19.
//
// Solidity: function getMinGCFee() view returns(uint96)
func (_PowerToken *PowerTokenSession) GetMinGCFee() (*big.Int, error) {
	return _PowerToken.Contract.GetMinGCFee(&_PowerToken.CallOpts)
}

// GetMinGCFee is a free data retrieval call binding the contract method 0x0aff9d19.
//
// Solidity: function getMinGCFee() view returns(uint96)
func (_PowerToken *PowerTokenCallerSession) GetMinGCFee() (*big.Int, error) {
	return _PowerToken.Contract.GetMinGCFee(&_PowerToken.CallOpts)
}

// GetMinLoanDuration is a free data retrieval call binding the contract method 0x13e7e63b.
//
// Solidity: function getMinLoanDuration() view returns(uint32)
func (_PowerToken *PowerTokenCaller) GetMinLoanDuration(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getMinLoanDuration")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// GetMinLoanDuration is a free data retrieval call binding the contract method 0x13e7e63b.
//
// Solidity: function getMinLoanDuration() view returns(uint32)
func (_PowerToken *PowerTokenSession) GetMinLoanDuration() (uint32, error) {
	return _PowerToken.Contract.GetMinLoanDuration(&_PowerToken.CallOpts)
}

// GetMinLoanDuration is a free data retrieval call binding the contract method 0x13e7e63b.
//
// Solidity: function getMinLoanDuration() view returns(uint32)
func (_PowerToken *PowerTokenCallerSession) GetMinLoanDuration() (uint32, error) {
	return _PowerToken.Contract.GetMinLoanDuration(&_PowerToken.CallOpts)
}

// GetServiceFeePercent is a free data retrieval call binding the contract method 0x6dfbee1b.
//
// Solidity: function getServiceFeePercent() view returns(uint16)
func (_PowerToken *PowerTokenCaller) GetServiceFeePercent(opts *bind.CallOpts) (uint16, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getServiceFeePercent")

	if err != nil {
		return *new(uint16), err
	}

	out0 := *abi.ConvertType(out[0], new(uint16)).(*uint16)

	return out0, err

}

// GetServiceFeePercent is a free data retrieval call binding the contract method 0x6dfbee1b.
//
// Solidity: function getServiceFeePercent() view returns(uint16)
func (_PowerToken *PowerTokenSession) GetServiceFeePercent() (uint16, error) {
	return _PowerToken.Contract.GetServiceFeePercent(&_PowerToken.CallOpts)
}

// GetServiceFeePercent is a free data retrieval call binding the contract method 0x6dfbee1b.
//
// Solidity: function getServiceFeePercent() view returns(uint16)
func (_PowerToken *PowerTokenCallerSession) GetServiceFeePercent() (uint16, error) {
	return _PowerToken.Contract.GetServiceFeePercent(&_PowerToken.CallOpts)
}

// GetState is a free data retrieval call binding the contract method 0x1bab58f5.
//
// Solidity: function getState(address account) view returns((uint112,uint112,uint32))
func (_PowerToken *PowerTokenCaller) GetState(opts *bind.CallOpts, account common.Address) (PowerTokenStorageState, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getState", account)

	if err != nil {
		return *new(PowerTokenStorageState), err
	}

	out0 := *abi.ConvertType(out[0], new(PowerTokenStorageState)).(*PowerTokenStorageState)

	return out0, err

}

// GetState is a free data retrieval call binding the contract method 0x1bab58f5.
//
// Solidity: function getState(address account) view returns((uint112,uint112,uint32))
func (_PowerToken *PowerTokenSession) GetState(account common.Address) (PowerTokenStorageState, error) {
	return _PowerToken.Contract.GetState(&_PowerToken.CallOpts, account)
}

// GetState is a free data retrieval call binding the contract method 0x1bab58f5.
//
// Solidity: function getState(address account) view returns((uint112,uint112,uint32))
func (_PowerToken *PowerTokenCallerSession) GetState(account common.Address) (PowerTokenStorageState, error) {
	return _PowerToken.Contract.GetState(&_PowerToken.CallOpts, account)
}

// IsAllowedLoanDuration is a free data retrieval call binding the contract method 0x6e4d8983.
//
// Solidity: function isAllowedLoanDuration(uint32 duration) view returns(bool)
func (_PowerToken *PowerTokenCaller) IsAllowedLoanDuration(opts *bind.CallOpts, duration uint32) (bool, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "isAllowedLoanDuration", duration)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsAllowedLoanDuration is a free data retrieval call binding the contract method 0x6e4d8983.
//
// Solidity: function isAllowedLoanDuration(uint32 duration) view returns(bool)
func (_PowerToken *PowerTokenSession) IsAllowedLoanDuration(duration uint32) (bool, error) {
	return _PowerToken.Contract.IsAllowedLoanDuration(&_PowerToken.CallOpts, duration)
}

// IsAllowedLoanDuration is a free data retrieval call binding the contract method 0x6e4d8983.
//
// Solidity: function isAllowedLoanDuration(uint32 duration) view returns(bool)
func (_PowerToken *PowerTokenCallerSession) IsAllowedLoanDuration(duration uint32) (bool, error) {
	return _PowerToken.Contract.IsAllowedLoanDuration(&_PowerToken.CallOpts, duration)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_PowerToken *PowerTokenCaller) Name(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "name")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_PowerToken *PowerTokenSession) Name() (string, error) {
	return _PowerToken.Contract.Name(&_PowerToken.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_PowerToken *PowerTokenCallerSession) Name() (string, error) {
	return _PowerToken.Contract.Name(&_PowerToken.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_PowerToken *PowerTokenCaller) Symbol(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "symbol")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_PowerToken *PowerTokenSession) Symbol() (string, error) {
	return _PowerToken.Contract.Symbol(&_PowerToken.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_PowerToken *PowerTokenCallerSession) Symbol() (string, error) {
	return _PowerToken.Contract.Symbol(&_PowerToken.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_PowerToken *PowerTokenCaller) TotalSupply(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "totalSupply")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_PowerToken *PowerTokenSession) TotalSupply() (*big.Int, error) {
	return _PowerToken.Contract.TotalSupply(&_PowerToken.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_PowerToken *PowerTokenCallerSession) TotalSupply() (*big.Int, error) {
	return _PowerToken.Contract.TotalSupply(&_PowerToken.CallOpts)
}

// AllowPerpetualForever is a paid mutator transaction binding the contract method 0x27256486.
//
// Solidity: function allowPerpetualForever() returns()
func (_PowerToken *PowerTokenTransactor) AllowPerpetualForever(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "allowPerpetualForever")
}

// AllowPerpetualForever is a paid mutator transaction binding the contract method 0x27256486.
//
// Solidity: function allowPerpetualForever() returns()
func (_PowerToken *PowerTokenSession) AllowPerpetualForever() (*types.Transaction, error) {
	return _PowerToken.Contract.AllowPerpetualForever(&_PowerToken.TransactOpts)
}

// AllowPerpetualForever is a paid mutator transaction binding the contract method 0x27256486.
//
// Solidity: function allowPerpetualForever() returns()
func (_PowerToken *PowerTokenTransactorSession) AllowPerpetualForever() (*types.Transaction, error) {
	return _PowerToken.Contract.AllowPerpetualForever(&_PowerToken.TransactOpts)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactor) Approve(opts *bind.TransactOpts, spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "approve", spender, amount)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenSession) Approve(spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.Approve(&_PowerToken.TransactOpts, spender, amount)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactorSession) Approve(spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.Approve(&_PowerToken.TransactOpts, spender, amount)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 value) returns()
func (_PowerToken *PowerTokenTransactor) BurnFrom(opts *bind.TransactOpts, account common.Address, value *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "burnFrom", account, value)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 value) returns()
func (_PowerToken *PowerTokenSession) BurnFrom(account common.Address, value *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.BurnFrom(&_PowerToken.TransactOpts, account, value)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 value) returns()
func (_PowerToken *PowerTokenTransactorSession) BurnFrom(account common.Address, value *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.BurnFrom(&_PowerToken.TransactOpts, account, value)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_PowerToken *PowerTokenTransactor) DecreaseAllowance(opts *bind.TransactOpts, spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "decreaseAllowance", spender, subtractedValue)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_PowerToken *PowerTokenSession) DecreaseAllowance(spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.DecreaseAllowance(&_PowerToken.TransactOpts, spender, subtractedValue)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_PowerToken *PowerTokenTransactorSession) DecreaseAllowance(spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.DecreaseAllowance(&_PowerToken.TransactOpts, spender, subtractedValue)
}

// ForceTransfer is a paid mutator transaction binding the contract method 0x33bebb77.
//
// Solidity: function forceTransfer(address from, address to, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactor) ForceTransfer(opts *bind.TransactOpts, from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "forceTransfer", from, to, amount)
}

// ForceTransfer is a paid mutator transaction binding the contract method 0x33bebb77.
//
// Solidity: function forceTransfer(address from, address to, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenSession) ForceTransfer(from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.ForceTransfer(&_PowerToken.TransactOpts, from, to, amount)
}

// ForceTransfer is a paid mutator transaction binding the contract method 0x33bebb77.
//
// Solidity: function forceTransfer(address from, address to, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactorSession) ForceTransfer(from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.ForceTransfer(&_PowerToken.TransactOpts, from, to, amount)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_PowerToken *PowerTokenTransactor) IncreaseAllowance(opts *bind.TransactOpts, spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "increaseAllowance", spender, addedValue)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_PowerToken *PowerTokenSession) IncreaseAllowance(spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.IncreaseAllowance(&_PowerToken.TransactOpts, spender, addedValue)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_PowerToken *PowerTokenTransactorSession) IncreaseAllowance(spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.IncreaseAllowance(&_PowerToken.TransactOpts, spender, addedValue)
}

// Initialize is a paid mutator transaction binding the contract method 0x1624f6c6.
//
// Solidity: function initialize(string name_, string symbol_, uint8 decimals_) returns()
func (_PowerToken *PowerTokenTransactor) Initialize(opts *bind.TransactOpts, name_ string, symbol_ string, decimals_ uint8) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "initialize", name_, symbol_, decimals_)
}

// Initialize is a paid mutator transaction binding the contract method 0x1624f6c6.
//
// Solidity: function initialize(string name_, string symbol_, uint8 decimals_) returns()
func (_PowerToken *PowerTokenSession) Initialize(name_ string, symbol_ string, decimals_ uint8) (*types.Transaction, error) {
	return _PowerToken.Contract.Initialize(&_PowerToken.TransactOpts, name_, symbol_, decimals_)
}

// Initialize is a paid mutator transaction binding the contract method 0x1624f6c6.
//
// Solidity: function initialize(string name_, string symbol_, uint8 decimals_) returns()
func (_PowerToken *PowerTokenTransactorSession) Initialize(name_ string, symbol_ string, decimals_ uint8) (*types.Transaction, error) {
	return _PowerToken.Contract.Initialize(&_PowerToken.TransactOpts, name_, symbol_, decimals_)
}

// Initialize0 is a paid mutator transaction binding the contract method 0x2ef0cf8b.
//
// Solidity: function initialize(address enterprise, uint112 baseRate, uint96 minGCFee, uint32 gapHalvingPeriod, uint16 index, address baseToken, uint32 minLoanDuration, uint32 maxLoanDuration, uint16 serviceFeePercent, bool allowsPerpetual) returns()
func (_PowerToken *PowerTokenTransactor) Initialize0(opts *bind.TransactOpts, enterprise common.Address, baseRate *big.Int, minGCFee *big.Int, gapHalvingPeriod uint32, index uint16, baseToken common.Address, minLoanDuration uint32, maxLoanDuration uint32, serviceFeePercent uint16, allowsPerpetual bool) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "initialize0", enterprise, baseRate, minGCFee, gapHalvingPeriod, index, baseToken, minLoanDuration, maxLoanDuration, serviceFeePercent, allowsPerpetual)
}

// Initialize0 is a paid mutator transaction binding the contract method 0x2ef0cf8b.
//
// Solidity: function initialize(address enterprise, uint112 baseRate, uint96 minGCFee, uint32 gapHalvingPeriod, uint16 index, address baseToken, uint32 minLoanDuration, uint32 maxLoanDuration, uint16 serviceFeePercent, bool allowsPerpetual) returns()
func (_PowerToken *PowerTokenSession) Initialize0(enterprise common.Address, baseRate *big.Int, minGCFee *big.Int, gapHalvingPeriod uint32, index uint16, baseToken common.Address, minLoanDuration uint32, maxLoanDuration uint32, serviceFeePercent uint16, allowsPerpetual bool) (*types.Transaction, error) {
	return _PowerToken.Contract.Initialize0(&_PowerToken.TransactOpts, enterprise, baseRate, minGCFee, gapHalvingPeriod, index, baseToken, minLoanDuration, maxLoanDuration, serviceFeePercent, allowsPerpetual)
}

// Initialize0 is a paid mutator transaction binding the contract method 0x2ef0cf8b.
//
// Solidity: function initialize(address enterprise, uint112 baseRate, uint96 minGCFee, uint32 gapHalvingPeriod, uint16 index, address baseToken, uint32 minLoanDuration, uint32 maxLoanDuration, uint16 serviceFeePercent, bool allowsPerpetual) returns()
func (_PowerToken *PowerTokenTransactorSession) Initialize0(enterprise common.Address, baseRate *big.Int, minGCFee *big.Int, gapHalvingPeriod uint32, index uint16, baseToken common.Address, minLoanDuration uint32, maxLoanDuration uint32, serviceFeePercent uint16, allowsPerpetual bool) (*types.Transaction, error) {
	return _PowerToken.Contract.Initialize0(&_PowerToken.TransactOpts, enterprise, baseRate, minGCFee, gapHalvingPeriod, index, baseToken, minLoanDuration, maxLoanDuration, serviceFeePercent, allowsPerpetual)
}

// Initialize1 is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address enterprise) returns()
func (_PowerToken *PowerTokenTransactor) Initialize1(opts *bind.TransactOpts, enterprise common.Address) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "initialize1", enterprise)
}

// Initialize1 is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address enterprise) returns()
func (_PowerToken *PowerTokenSession) Initialize1(enterprise common.Address) (*types.Transaction, error) {
	return _PowerToken.Contract.Initialize1(&_PowerToken.TransactOpts, enterprise)
}

// Initialize1 is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address enterprise) returns()
func (_PowerToken *PowerTokenTransactorSession) Initialize1(enterprise common.Address) (*types.Transaction, error) {
	return _PowerToken.Contract.Initialize1(&_PowerToken.TransactOpts, enterprise)
}

// Mint is a paid mutator transaction binding the contract method 0x40c10f19.
//
// Solidity: function mint(address to, uint256 value) returns()
func (_PowerToken *PowerTokenTransactor) Mint(opts *bind.TransactOpts, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "mint", to, value)
}

// Mint is a paid mutator transaction binding the contract method 0x40c10f19.
//
// Solidity: function mint(address to, uint256 value) returns()
func (_PowerToken *PowerTokenSession) Mint(to common.Address, value *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.Mint(&_PowerToken.TransactOpts, to, value)
}

// Mint is a paid mutator transaction binding the contract method 0x40c10f19.
//
// Solidity: function mint(address to, uint256 value) returns()
func (_PowerToken *PowerTokenTransactorSession) Mint(to common.Address, value *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.Mint(&_PowerToken.TransactOpts, to, value)
}

// NotifyNewLoan is a paid mutator transaction binding the contract method 0xf8642f29.
//
// Solidity: function notifyNewLoan(uint256 borrowTokenId) returns()
func (_PowerToken *PowerTokenTransactor) NotifyNewLoan(opts *bind.TransactOpts, borrowTokenId *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "notifyNewLoan", borrowTokenId)
}

// NotifyNewLoan is a paid mutator transaction binding the contract method 0xf8642f29.
//
// Solidity: function notifyNewLoan(uint256 borrowTokenId) returns()
func (_PowerToken *PowerTokenSession) NotifyNewLoan(borrowTokenId *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.NotifyNewLoan(&_PowerToken.TransactOpts, borrowTokenId)
}

// NotifyNewLoan is a paid mutator transaction binding the contract method 0xf8642f29.
//
// Solidity: function notifyNewLoan(uint256 borrowTokenId) returns()
func (_PowerToken *PowerTokenTransactorSession) NotifyNewLoan(borrowTokenId *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.NotifyNewLoan(&_PowerToken.TransactOpts, borrowTokenId)
}

// SetBaseRate is a paid mutator transaction binding the contract method 0x759c8be3.
//
// Solidity: function setBaseRate(uint112 baseRate, address baseToken, uint96 minGCFee) returns()
func (_PowerToken *PowerTokenTransactor) SetBaseRate(opts *bind.TransactOpts, baseRate *big.Int, baseToken common.Address, minGCFee *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "setBaseRate", baseRate, baseToken, minGCFee)
}

// SetBaseRate is a paid mutator transaction binding the contract method 0x759c8be3.
//
// Solidity: function setBaseRate(uint112 baseRate, address baseToken, uint96 minGCFee) returns()
func (_PowerToken *PowerTokenSession) SetBaseRate(baseRate *big.Int, baseToken common.Address, minGCFee *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.SetBaseRate(&_PowerToken.TransactOpts, baseRate, baseToken, minGCFee)
}

// SetBaseRate is a paid mutator transaction binding the contract method 0x759c8be3.
//
// Solidity: function setBaseRate(uint112 baseRate, address baseToken, uint96 minGCFee) returns()
func (_PowerToken *PowerTokenTransactorSession) SetBaseRate(baseRate *big.Int, baseToken common.Address, minGCFee *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.SetBaseRate(&_PowerToken.TransactOpts, baseRate, baseToken, minGCFee)
}

// SetLoanDurationLimits is a paid mutator transaction binding the contract method 0xc0434352.
//
// Solidity: function setLoanDurationLimits(uint32 minLoanDuration, uint32 maxLoanDuration) returns()
func (_PowerToken *PowerTokenTransactor) SetLoanDurationLimits(opts *bind.TransactOpts, minLoanDuration uint32, maxLoanDuration uint32) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "setLoanDurationLimits", minLoanDuration, maxLoanDuration)
}

// SetLoanDurationLimits is a paid mutator transaction binding the contract method 0xc0434352.
//
// Solidity: function setLoanDurationLimits(uint32 minLoanDuration, uint32 maxLoanDuration) returns()
func (_PowerToken *PowerTokenSession) SetLoanDurationLimits(minLoanDuration uint32, maxLoanDuration uint32) (*types.Transaction, error) {
	return _PowerToken.Contract.SetLoanDurationLimits(&_PowerToken.TransactOpts, minLoanDuration, maxLoanDuration)
}

// SetLoanDurationLimits is a paid mutator transaction binding the contract method 0xc0434352.
//
// Solidity: function setLoanDurationLimits(uint32 minLoanDuration, uint32 maxLoanDuration) returns()
func (_PowerToken *PowerTokenTransactorSession) SetLoanDurationLimits(minLoanDuration uint32, maxLoanDuration uint32) (*types.Transaction, error) {
	return _PowerToken.Contract.SetLoanDurationLimits(&_PowerToken.TransactOpts, minLoanDuration, maxLoanDuration)
}

// SetServiceFeePercent is a paid mutator transaction binding the contract method 0x0d148ab6.
//
// Solidity: function setServiceFeePercent(uint16 newServiceFeePercent) returns()
func (_PowerToken *PowerTokenTransactor) SetServiceFeePercent(opts *bind.TransactOpts, newServiceFeePercent uint16) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "setServiceFeePercent", newServiceFeePercent)
}

// SetServiceFeePercent is a paid mutator transaction binding the contract method 0x0d148ab6.
//
// Solidity: function setServiceFeePercent(uint16 newServiceFeePercent) returns()
func (_PowerToken *PowerTokenSession) SetServiceFeePercent(newServiceFeePercent uint16) (*types.Transaction, error) {
	return _PowerToken.Contract.SetServiceFeePercent(&_PowerToken.TransactOpts, newServiceFeePercent)
}

// SetServiceFeePercent is a paid mutator transaction binding the contract method 0x0d148ab6.
//
// Solidity: function setServiceFeePercent(uint16 newServiceFeePercent) returns()
func (_PowerToken *PowerTokenTransactorSession) SetServiceFeePercent(newServiceFeePercent uint16) (*types.Transaction, error) {
	return _PowerToken.Contract.SetServiceFeePercent(&_PowerToken.TransactOpts, newServiceFeePercent)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address recipient, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactor) Transfer(opts *bind.TransactOpts, recipient common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "transfer", recipient, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address recipient, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenSession) Transfer(recipient common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.Transfer(&_PowerToken.TransactOpts, recipient, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address recipient, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactorSession) Transfer(recipient common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.Transfer(&_PowerToken.TransactOpts, recipient, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address sender, address recipient, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactor) TransferFrom(opts *bind.TransactOpts, sender common.Address, recipient common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "transferFrom", sender, recipient, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address sender, address recipient, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenSession) TransferFrom(sender common.Address, recipient common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.TransferFrom(&_PowerToken.TransactOpts, sender, recipient, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address sender, address recipient, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactorSession) TransferFrom(sender common.Address, recipient common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.TransferFrom(&_PowerToken.TransactOpts, sender, recipient, amount)
}

// Unwrap is a paid mutator transaction binding the contract method 0xde0e9a3e.
//
// Solidity: function unwrap(uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactor) Unwrap(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "unwrap", amount)
}

// Unwrap is a paid mutator transaction binding the contract method 0xde0e9a3e.
//
// Solidity: function unwrap(uint256 amount) returns(bool)
func (_PowerToken *PowerTokenSession) Unwrap(amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.Unwrap(&_PowerToken.TransactOpts, amount)
}

// Unwrap is a paid mutator transaction binding the contract method 0xde0e9a3e.
//
// Solidity: function unwrap(uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactorSession) Unwrap(amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.Unwrap(&_PowerToken.TransactOpts, amount)
}

// Wrap is a paid mutator transaction binding the contract method 0xea598cb0.
//
// Solidity: function wrap(uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactor) Wrap(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "wrap", amount)
}

// Wrap is a paid mutator transaction binding the contract method 0xea598cb0.
//
// Solidity: function wrap(uint256 amount) returns(bool)
func (_PowerToken *PowerTokenSession) Wrap(amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.Wrap(&_PowerToken.TransactOpts, amount)
}

// Wrap is a paid mutator transaction binding the contract method 0xea598cb0.
//
// Solidity: function wrap(uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactorSession) Wrap(amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.Wrap(&_PowerToken.TransactOpts, amount)
}

// WrapTo is a paid mutator transaction binding the contract method 0x9f126fbe.
//
// Solidity: function wrapTo(address to, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactor) WrapTo(opts *bind.TransactOpts, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "wrapTo", to, amount)
}

// WrapTo is a paid mutator transaction binding the contract method 0x9f126fbe.
//
// Solidity: function wrapTo(address to, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenSession) WrapTo(to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.WrapTo(&_PowerToken.TransactOpts, to, amount)
}

// WrapTo is a paid mutator transaction binding the contract method 0x9f126fbe.
//
// Solidity: function wrapTo(address to, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactorSession) WrapTo(to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.WrapTo(&_PowerToken.TransactOpts, to, amount)
}

// PowerTokenApprovalIterator is returned from FilterApproval and is used to iterate over the raw logs and unpacked data for Approval events raised by the PowerToken contract.
type PowerTokenApprovalIterator struct {
	Event *PowerTokenApproval // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *PowerTokenApprovalIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(PowerTokenApproval)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(PowerTokenApproval)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *PowerTokenApprovalIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *PowerTokenApprovalIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// PowerTokenApproval represents a Approval event raised by the PowerToken contract.
type PowerTokenApproval struct {
	Owner   common.Address
	Spender common.Address
	Value   *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterApproval is a free log retrieval operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_PowerToken *PowerTokenFilterer) FilterApproval(opts *bind.FilterOpts, owner []common.Address, spender []common.Address) (*PowerTokenApprovalIterator, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _PowerToken.contract.FilterLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return &PowerTokenApprovalIterator{contract: _PowerToken.contract, event: "Approval", logs: logs, sub: sub}, nil
}

// WatchApproval is a free log subscription operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_PowerToken *PowerTokenFilterer) WatchApproval(opts *bind.WatchOpts, sink chan<- *PowerTokenApproval, owner []common.Address, spender []common.Address) (event.Subscription, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _PowerToken.contract.WatchLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(PowerTokenApproval)
				if err := _PowerToken.contract.UnpackLog(event, "Approval", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseApproval is a log parse operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_PowerToken *PowerTokenFilterer) ParseApproval(log types.Log) (*PowerTokenApproval, error) {
	event := new(PowerTokenApproval)
	if err := _PowerToken.contract.UnpackLog(event, "Approval", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// PowerTokenBaseRateChangedIterator is returned from FilterBaseRateChanged and is used to iterate over the raw logs and unpacked data for BaseRateChanged events raised by the PowerToken contract.
type PowerTokenBaseRateChangedIterator struct {
	Event *PowerTokenBaseRateChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *PowerTokenBaseRateChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(PowerTokenBaseRateChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(PowerTokenBaseRateChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *PowerTokenBaseRateChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *PowerTokenBaseRateChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// PowerTokenBaseRateChanged represents a BaseRateChanged event raised by the PowerToken contract.
type PowerTokenBaseRateChanged struct {
	BaseRate  *big.Int
	BaseToken common.Address
	MinGCFee  *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterBaseRateChanged is a free log retrieval operation binding the contract event 0x2833a6b2910014b082775316936860d808d821fc59634fa08bc19c19427fa99d.
//
// Solidity: event BaseRateChanged(uint112 baseRate, address baseToken, uint96 minGCFee)
func (_PowerToken *PowerTokenFilterer) FilterBaseRateChanged(opts *bind.FilterOpts) (*PowerTokenBaseRateChangedIterator, error) {

	logs, sub, err := _PowerToken.contract.FilterLogs(opts, "BaseRateChanged")
	if err != nil {
		return nil, err
	}
	return &PowerTokenBaseRateChangedIterator{contract: _PowerToken.contract, event: "BaseRateChanged", logs: logs, sub: sub}, nil
}

// WatchBaseRateChanged is a free log subscription operation binding the contract event 0x2833a6b2910014b082775316936860d808d821fc59634fa08bc19c19427fa99d.
//
// Solidity: event BaseRateChanged(uint112 baseRate, address baseToken, uint96 minGCFee)
func (_PowerToken *PowerTokenFilterer) WatchBaseRateChanged(opts *bind.WatchOpts, sink chan<- *PowerTokenBaseRateChanged) (event.Subscription, error) {

	logs, sub, err := _PowerToken.contract.WatchLogs(opts, "BaseRateChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(PowerTokenBaseRateChanged)
				if err := _PowerToken.contract.UnpackLog(event, "BaseRateChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBaseRateChanged is a log parse operation binding the contract event 0x2833a6b2910014b082775316936860d808d821fc59634fa08bc19c19427fa99d.
//
// Solidity: event BaseRateChanged(uint112 baseRate, address baseToken, uint96 minGCFee)
func (_PowerToken *PowerTokenFilterer) ParseBaseRateChanged(log types.Log) (*PowerTokenBaseRateChanged, error) {
	event := new(PowerTokenBaseRateChanged)
	if err := _PowerToken.contract.UnpackLog(event, "BaseRateChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// PowerTokenLoanDurationLimitsChangedIterator is returned from FilterLoanDurationLimitsChanged and is used to iterate over the raw logs and unpacked data for LoanDurationLimitsChanged events raised by the PowerToken contract.
type PowerTokenLoanDurationLimitsChangedIterator struct {
	Event *PowerTokenLoanDurationLimitsChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *PowerTokenLoanDurationLimitsChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(PowerTokenLoanDurationLimitsChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(PowerTokenLoanDurationLimitsChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *PowerTokenLoanDurationLimitsChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *PowerTokenLoanDurationLimitsChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// PowerTokenLoanDurationLimitsChanged represents a LoanDurationLimitsChanged event raised by the PowerToken contract.
type PowerTokenLoanDurationLimitsChanged struct {
	MinDuration uint32
	MaxDuration uint32
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterLoanDurationLimitsChanged is a free log retrieval operation binding the contract event 0x1ff66a89a0dcb0d94c8284280cbf0fb7190e7d935e15b6b48513e08b84fd9c7b.
//
// Solidity: event LoanDurationLimitsChanged(uint32 minDuration, uint32 maxDuration)
func (_PowerToken *PowerTokenFilterer) FilterLoanDurationLimitsChanged(opts *bind.FilterOpts) (*PowerTokenLoanDurationLimitsChangedIterator, error) {

	logs, sub, err := _PowerToken.contract.FilterLogs(opts, "LoanDurationLimitsChanged")
	if err != nil {
		return nil, err
	}
	return &PowerTokenLoanDurationLimitsChangedIterator{contract: _PowerToken.contract, event: "LoanDurationLimitsChanged", logs: logs, sub: sub}, nil
}

// WatchLoanDurationLimitsChanged is a free log subscription operation binding the contract event 0x1ff66a89a0dcb0d94c8284280cbf0fb7190e7d935e15b6b48513e08b84fd9c7b.
//
// Solidity: event LoanDurationLimitsChanged(uint32 minDuration, uint32 maxDuration)
func (_PowerToken *PowerTokenFilterer) WatchLoanDurationLimitsChanged(opts *bind.WatchOpts, sink chan<- *PowerTokenLoanDurationLimitsChanged) (event.Subscription, error) {

	logs, sub, err := _PowerToken.contract.WatchLogs(opts, "LoanDurationLimitsChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(PowerTokenLoanDurationLimitsChanged)
				if err := _PowerToken.contract.UnpackLog(event, "LoanDurationLimitsChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLoanDurationLimitsChanged is a log parse operation binding the contract event 0x1ff66a89a0dcb0d94c8284280cbf0fb7190e7d935e15b6b48513e08b84fd9c7b.
//
// Solidity: event LoanDurationLimitsChanged(uint32 minDuration, uint32 maxDuration)
func (_PowerToken *PowerTokenFilterer) ParseLoanDurationLimitsChanged(log types.Log) (*PowerTokenLoanDurationLimitsChanged, error) {
	event := new(PowerTokenLoanDurationLimitsChanged)
	if err := _PowerToken.contract.UnpackLog(event, "LoanDurationLimitsChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// PowerTokenPerpetualAllowedIterator is returned from FilterPerpetualAllowed and is used to iterate over the raw logs and unpacked data for PerpetualAllowed events raised by the PowerToken contract.
type PowerTokenPerpetualAllowedIterator struct {
	Event *PowerTokenPerpetualAllowed // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *PowerTokenPerpetualAllowedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(PowerTokenPerpetualAllowed)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(PowerTokenPerpetualAllowed)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *PowerTokenPerpetualAllowedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *PowerTokenPerpetualAllowedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// PowerTokenPerpetualAllowed represents a PerpetualAllowed event raised by the PowerToken contract.
type PowerTokenPerpetualAllowed struct {
	Raw types.Log // Blockchain specific contextual infos
}

// FilterPerpetualAllowed is a free log retrieval operation binding the contract event 0x772fb13db6d1f0f35034c4b28dbbb01644e39d7e8b38de2a93b3c9d1fbb1ad4a.
//
// Solidity: event PerpetualAllowed()
func (_PowerToken *PowerTokenFilterer) FilterPerpetualAllowed(opts *bind.FilterOpts) (*PowerTokenPerpetualAllowedIterator, error) {

	logs, sub, err := _PowerToken.contract.FilterLogs(opts, "PerpetualAllowed")
	if err != nil {
		return nil, err
	}
	return &PowerTokenPerpetualAllowedIterator{contract: _PowerToken.contract, event: "PerpetualAllowed", logs: logs, sub: sub}, nil
}

// WatchPerpetualAllowed is a free log subscription operation binding the contract event 0x772fb13db6d1f0f35034c4b28dbbb01644e39d7e8b38de2a93b3c9d1fbb1ad4a.
//
// Solidity: event PerpetualAllowed()
func (_PowerToken *PowerTokenFilterer) WatchPerpetualAllowed(opts *bind.WatchOpts, sink chan<- *PowerTokenPerpetualAllowed) (event.Subscription, error) {

	logs, sub, err := _PowerToken.contract.WatchLogs(opts, "PerpetualAllowed")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(PowerTokenPerpetualAllowed)
				if err := _PowerToken.contract.UnpackLog(event, "PerpetualAllowed", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePerpetualAllowed is a log parse operation binding the contract event 0x772fb13db6d1f0f35034c4b28dbbb01644e39d7e8b38de2a93b3c9d1fbb1ad4a.
//
// Solidity: event PerpetualAllowed()
func (_PowerToken *PowerTokenFilterer) ParsePerpetualAllowed(log types.Log) (*PowerTokenPerpetualAllowed, error) {
	event := new(PowerTokenPerpetualAllowed)
	if err := _PowerToken.contract.UnpackLog(event, "PerpetualAllowed", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// PowerTokenServiceFeePercentChangedIterator is returned from FilterServiceFeePercentChanged and is used to iterate over the raw logs and unpacked data for ServiceFeePercentChanged events raised by the PowerToken contract.
type PowerTokenServiceFeePercentChangedIterator struct {
	Event *PowerTokenServiceFeePercentChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *PowerTokenServiceFeePercentChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(PowerTokenServiceFeePercentChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(PowerTokenServiceFeePercentChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *PowerTokenServiceFeePercentChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *PowerTokenServiceFeePercentChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// PowerTokenServiceFeePercentChanged represents a ServiceFeePercentChanged event raised by the PowerToken contract.
type PowerTokenServiceFeePercentChanged struct {
	Percent uint16
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterServiceFeePercentChanged is a free log retrieval operation binding the contract event 0x7b5d5b53df75c87d5bea0f0535cd81a355db537ee2ca5dcea9849433d99847b9.
//
// Solidity: event ServiceFeePercentChanged(uint16 percent)
func (_PowerToken *PowerTokenFilterer) FilterServiceFeePercentChanged(opts *bind.FilterOpts) (*PowerTokenServiceFeePercentChangedIterator, error) {

	logs, sub, err := _PowerToken.contract.FilterLogs(opts, "ServiceFeePercentChanged")
	if err != nil {
		return nil, err
	}
	return &PowerTokenServiceFeePercentChangedIterator{contract: _PowerToken.contract, event: "ServiceFeePercentChanged", logs: logs, sub: sub}, nil
}

// WatchServiceFeePercentChanged is a free log subscription operation binding the contract event 0x7b5d5b53df75c87d5bea0f0535cd81a355db537ee2ca5dcea9849433d99847b9.
//
// Solidity: event ServiceFeePercentChanged(uint16 percent)
func (_PowerToken *PowerTokenFilterer) WatchServiceFeePercentChanged(opts *bind.WatchOpts, sink chan<- *PowerTokenServiceFeePercentChanged) (event.Subscription, error) {

	logs, sub, err := _PowerToken.contract.WatchLogs(opts, "ServiceFeePercentChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(PowerTokenServiceFeePercentChanged)
				if err := _PowerToken.contract.UnpackLog(event, "ServiceFeePercentChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseServiceFeePercentChanged is a log parse operation binding the contract event 0x7b5d5b53df75c87d5bea0f0535cd81a355db537ee2ca5dcea9849433d99847b9.
//
// Solidity: event ServiceFeePercentChanged(uint16 percent)
func (_PowerToken *PowerTokenFilterer) ParseServiceFeePercentChanged(log types.Log) (*PowerTokenServiceFeePercentChanged, error) {
	event := new(PowerTokenServiceFeePercentChanged)
	if err := _PowerToken.contract.UnpackLog(event, "ServiceFeePercentChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// PowerTokenTransferIterator is returned from FilterTransfer and is used to iterate over the raw logs and unpacked data for Transfer events raised by the PowerToken contract.
type PowerTokenTransferIterator struct {
	Event *PowerTokenTransfer // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *PowerTokenTransferIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(PowerTokenTransfer)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(PowerTokenTransfer)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *PowerTokenTransferIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *PowerTokenTransferIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// PowerTokenTransfer represents a Transfer event raised by the PowerToken contract.
type PowerTokenTransfer struct {
	From  common.Address
	To    common.Address
	Value *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterTransfer is a free log retrieval operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_PowerToken *PowerTokenFilterer) FilterTransfer(opts *bind.FilterOpts, from []common.Address, to []common.Address) (*PowerTokenTransferIterator, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _PowerToken.contract.FilterLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return &PowerTokenTransferIterator{contract: _PowerToken.contract, event: "Transfer", logs: logs, sub: sub}, nil
}

// WatchTransfer is a free log subscription operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_PowerToken *PowerTokenFilterer) WatchTransfer(opts *bind.WatchOpts, sink chan<- *PowerTokenTransfer, from []common.Address, to []common.Address) (event.Subscription, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _PowerToken.contract.WatchLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(PowerTokenTransfer)
				if err := _PowerToken.contract.UnpackLog(event, "Transfer", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransfer is a log parse operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_PowerToken *PowerTokenFilterer) ParseTransfer(log types.Log) (*PowerTokenTransfer, error) {
	event := new(PowerTokenTransfer)
	if err := _PowerToken.contract.UnpackLog(event, "Transfer", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
