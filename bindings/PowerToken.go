// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// PowerTokenMetaData contains all meta data concerning the PowerToken contract.
var PowerTokenMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"baseRate\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"minGCFee\",\"type\":\"uint96\"}],\"name\":\"BaseRateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"minRentalPeriod\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"maxRentalPeriod\",\"type\":\"uint32\"}],\"name\":\"RentalPeriodLimitsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"percent\",\"type\":\"uint16\"}],\"name\":\"ServiceFeePercentChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SwappingEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TransferEnabled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"availableBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableSwappingForever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTransferForever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"}],\"name\":\"energyAt\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint112\",\"name\":\"rentalAmount\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"rentalPeriod\",\"type\":\"uint32\"}],\"name\":\"estimateRentalFee\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"poolFee\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"serviceFee\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"gcFee\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"forceTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseRate\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseToken\",\"outputs\":[{\"internalType\":\"contractIERC20Metadata\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEnergyGapHalvingPeriod\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEnterprise\",\"outputs\":[{\"internalType\":\"contractIEnterprise\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIndex\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"contractIERC20Metadata\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint112\",\"name\":\"baseRate\",\"type\":\"uint112\"},{\"internalType\":\"uint96\",\"name\":\"minGCFee\",\"type\":\"uint96\"},{\"internalType\":\"uint16\",\"name\":\"serviceFeePercent\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"energyGapHalvingPeriod\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"minRentalPeriod\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxRentalPeriod\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"swappingEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferEnabled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxRentalPeriod\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinGCFee\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinRentalPeriod\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getServiceFeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"lockedBalance\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"energy\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"}],\"internalType\":\"structPowerTokenStorage.State\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIEnterprise\",\"name\":\"enterprise\",\"type\":\"address\"},{\"internalType\":\"contractIERC20Metadata\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint112\",\"name\":\"baseRate\",\"type\":\"uint112\"},{\"internalType\":\"uint96\",\"name\":\"minGCFee\",\"type\":\"uint96\"},{\"internalType\":\"uint16\",\"name\":\"serviceFeePercent\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"energyGapHalvingPeriod\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"minRentalPeriod\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxRentalPeriod\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"swappingEnabled\",\"type\":\"bool\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIEnterprise\",\"name\":\"enterprise\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"period\",\"type\":\"uint32\"}],\"name\":\"isAllowedRentalPeriod\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSwappingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTransferEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rentalTokenId\",\"type\":\"uint256\"}],\"name\":\"notifyNewRental\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint112\",\"name\":\"baseRate\",\"type\":\"uint112\"},{\"internalType\":\"contractIERC20Metadata\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"minGCFee\",\"type\":\"uint96\"}],\"name\":\"setBaseRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"minRentalPeriod\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxRentalPeriod\",\"type\":\"uint32\"}],\"name\":\"setRentalPeriodLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newServiceFeePercent\",\"type\":\"uint16\"}],\"name\":\"setServiceFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swapIn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swapOut\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561001057600080fd5b50613845806100206000396000f3fe608060405234801561001057600080fd5b50600436106101ee5760003560e01c806306fdde03146101f3578063095ea7b3146102115780630aff9d19146102345780630d148ab61461025f5780631624f6c61461027457806318160ddd146102875780631bab58f51461029957806323b872dd1461034957806325d998bb1461035c578063313ce5671461036f57806333bebb771461038457806335528ee014610397578063395093511461039f57806340c10f19146103b25780634aa5028b146103c55780635370028e146103d75780635a859465146104025780635a9b0b8914610413578063659262a0146104335780636dfbee1b1461043b5780636e4dba761461045d578063700055571461047057806370a082311461048357806374d945d914610496578063759c7265146104a9578063759c8be3146104bc57806379cc6790146104cf57806381045ead146104e257806395d89b41146104f557806398acd7a6146104fd578063a457c2d714610517578063a9059cbb1461052a578063b29c98ad1461053d578063b655d0c414610550578063c4d66de814610561578063cca5dcb614610574578063cec2f24614610586578063d29cc7c0146105ac578063dd62ed3e146105c1578063e298a2fd146105fa578063fcc4b67d14610602578063ff1fb88614610617575b600080fd5b6101fb610654565b6040516102089190613324565b60405180910390f35b61022461021f366004612f94565b6106e6565b6040519015158152602001610208565b600154600160701b90046001600160601b03166040516001600160601b039091168152602001610208565b61027261026d3660046131ec565b6106fd565b005b61027261028236600461313d565b61084a565b6006545b604051908152602001610208565b6103136102a7366004612ea0565b6040805160608082018352600080835260208084018290529284018190526001600160a01b03949094168452600382529282902082519384018352546001600160701b038082168552600160701b82041691840191909152600160e01b900463ffffffff169082015290565b6040805182516001600160701b039081168252602080850151909116908201529181015163ffffffff1690820152606001610208565b610224610357366004612f10565b6108d0565b61028b61036a366004612ea0565b610961565b60095460405160ff9091168152602001610208565b610224610392366004612f10565b610996565b6102726109f3565b6102246103ad366004612f94565b610b23565b6102726103c0366004612f94565b610b5a565b600254600160f01b900460ff16610224565b6103ea6103e5366004612fbf565b610baf565b6040516001600160701b039091168152602001610208565b610272610410366004613224565b50565b61041b610c15565b6040516102089c9b9a99989796959493929190613337565b610272610da0565b600254600160e01b900461ffff165b60405161ffff9091168152602001610208565b61027261046b366004613291565b610ee4565b61022461047e366004613277565b611057565b61028b610491366004612ea0565b611091565b6102246104a4366004613224565b6110ac565b6102246104b7366004613224565b61114f565b6102726104ca3660046131b1565b611232565b6102726104dd366004612f94565b6113ac565b600154600160f01b900461ffff1661044a565b6101fb6113fd565b6002546001600160a01b03165b6040516102089190613310565b610224610525366004612f94565b61140c565b610224610538366004612f94565b61147a565b61027261054b36600461300f565b611489565b6001546001600160701b03166103ea565b61027261056f366004612ea0565b61176a565b600254600160f81b900460ff16610224565b600154600160d01b900463ffffffff165b60405163ffffffff9091168152602001610208565b600254600160c01b900463ffffffff16610597565b61028b6105cf366004612ed8565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b61050a611811565b600254600160a01b900463ffffffff16610597565b61062a610625366004612f50565b611820565b604080516001600160701b0394851681529284166020840152921691810191909152606001610208565b606060078054610663906136a8565b80601f016020809104026020016040519081016040528092919081815260200182805461068f906136a8565b80156106dc5780601f106106b1576101008083540402835291602001916106dc565b820191906000526020600020905b8154815290600101906020018083116106bf57829003601f168201915b5050505050905090565b60006106f3338484611a97565b5060015b92915050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561074157600080fd5b505afa158015610755573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107799190612ebc565b6001600160a01b031614604051806040016040528060018152602001603360f81b815250906107c45760405162461bcd60e51b81526004016107bb9190613324565b60405180910390fd5b50604080518082019091526002815261363760f01b602082015261138861ffff831611156108055760405162461bcd60e51b81526004016107bb9190613324565b506002805461ffff60e01b1916600160e01b61ffff8416908102919091179091556040519081526000805160206137d08339815191529060200160405180910390a150565b60078054610857906136a8565b6040805180820190915260018152601960f91b602082015291501561088f5760405162461bcd60e51b81526004016107bb9190613324565b5082516108a3906007906020860190612d6f565b5081516108b7906008906020850190612d6f565b506009805460ff191660ff929092169190911790555050565b60006108df8484846000611b7b565b6001600160a01b03841660009081526005602090815260408083203384528252918290205482518084019093526002835261031360f41b91830191909152908382101561093f5760405162461bcd60e51b81526004016107bb9190613324565b50610954853361094f8685613665565b611a97565b60019150505b9392505050565b6001600160a01b0381166000908152600360205260408120546001600160701b031661098c83611091565b6106f79190613665565b600080546040805180820190915260018152600d60fa1b6020820152906001600160a01b031633146109db5760405162461bcd60e51b81526004016107bb9190613324565b506109e98484846001611b7b565b5060019392505050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610a3757600080fd5b505afa158015610a4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6f9190612ebc565b6001600160a01b031614604051806040016040528060018152602001603360f81b81525090610ab15760405162461bcd60e51b81526004016107bb9190613324565b50600280546040805180820190915291825261037360f41b6020830152600160f01b900460ff1615610af65760405162461bcd60e51b81526004016107bb9190613324565b506002805460ff60f01b1916600160f01b17905560405160008051602061377083398151915290600090a1565b3360008181526005602090815260408083206001600160a01b038716845290915281205490916106f391859061094f9086906134b7565b6000546040805180820190915260018152600d60fa1b6020820152906001600160a01b03163314610b9e5760405162461bcd60e51b81526004016107bb9190613324565b50610bab82826001611ceb565b5050565b6001600160a01b0382166000908152600360209081526040808320815160608101835290546001600160701b038082168352600160701b82041693820193909352600160e01b90920463ffffffff1690820152610c0d818585611da9565b949350505050565b606080600080600080600080600080600080306001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610c6057600080fd5b505afa158015610c74573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c9c91908101906130d4565b306001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610cd557600080fd5b505afa158015610ce9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d1191908101906130d4565b600254600154929f919e506001600160a01b0381169d506001600160701b0383169c506001600160601b03600160701b8404169b5061ffff600160e01b820481169b5063ffffffff600160d01b850481169b50600160f01b948590049091169950600160a01b820481169850600160c01b820416965060ff92810483169550600160f81b900490911692509050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610de457600080fd5b505afa158015610df8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1c9190612ebc565b6001600160a01b031614604051806040016040528060018152602001603360f81b81525090610e5e5760405162461bcd60e51b81526004016107bb9190613324565b50600280546040805180820190915291825261373960f01b6020830152600160f81b900460ff1615610ea35760405162461bcd60e51b81526004016107bb9190613324565b50600280546001600160f81b0316600160f81b1790556040517f75fce015c314a132947a3e42f6ab79ab8e05397dabf35b4d742dea228bbadc2d90600090a1565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610f2857600080fd5b505afa158015610f3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f609190612ebc565b6001600160a01b031614604051806040016040528060018152602001603360f81b81525090610fa25760405162461bcd60e51b81526004016107bb9190613324565b508063ffffffff168263ffffffff16111560405180604001604052806002815260200161363960f01b81525090610fec5760405162461bcd60e51b81526004016107bb9190613324565b506002805463ffffffff838116600160c01b0263ffffffff60c01b19918616600160a01b0291909116600160a01b600160e01b0319909216919091171790556040516000805160206137908339815191529061104b908490849061341e565b60405180910390a15050565b60025460009063ffffffff808416600160a01b90920416118015906106f7575050600254600160c01b900463ffffffff9081169116111590565b6001600160a01b031660009081526004602052604090205490565b60006110ba33836000611e37565b61114733836110c7611811565b6001600160a01b03166360f870876040518163ffffffff1660e01b815260040160206040518083038186803b1580156110ff57600080fd5b505afa158015611113573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111379190612ebc565b6001600160a01b03169190611f50565b506001919050565b600280546040805180820190915291825261353160f01b602083015260009190600160f01b900460ff166111965760405162461bcd60e51b81526004016107bb9190613324565b506112263330846111a5611811565b6001600160a01b03166360f870876040518163ffffffff1660e01b815260040160206040518083038186803b1580156111dd57600080fd5b505afa1580156111f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112159190612ebc565b6001600160a01b0316929190611fb8565b61114733836000611ceb565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561127657600080fd5b505afa15801561128a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ae9190612ebc565b6001600160a01b031614604051806040016040528060018152602001603360f81b815250906112f05760405162461bcd60e51b81526004016107bb9190613324565b5060028054604080518082019091529182526106c760f31b60208301526001600160a01b03166113335760405162461bcd60e51b81526004016107bb9190613324565b5060018054600280546001600160a01b0319166001600160a01b0386161790556001600160701b0385166001600160d01b031990911617600160701b6001600160601b038416021790556040516000805160206137f08339815191529061139f908590859085906133eb565b60405180910390a1505050565b6000546040805180820190915260018152600d60fa1b6020820152906001600160a01b031633146113f05760405162461bcd60e51b81526004016107bb9190613324565b50610bab82826001611e37565b606060088054610663906136a8565b3360009081526005602090815260408083206001600160a01b038616845282528083205481518083019092526002825261313160f01b928201929092528382101561146a5760405162461bcd60e51b81526004016107bb9190613324565b506109e9338561094f8685613665565b60006106f33384846000611b7b565b6001805460408051808201909152918252601960f91b6020830152600160d01b900463ffffffff16156114cf5760405162461bcd60e51b81526004016107bb9190613324565b50604080518082019091526002815261343360f01b602082015263ffffffff861661150d5760405162461bcd60e51b81526004016107bb9190613324565b506040805180820190915260028152611c1960f11b602082015263ffffffff831661154b5760405162461bcd60e51b81526004016107bb9190613324565b508163ffffffff168363ffffffff16111560405180604001604052806002815260200161363960f01b815250906115955760405162461bcd60e51b81526004016107bb9190613324565b5061159f8a61176a565b88600260006101000a8154816001600160a01b0302191690836001600160a01b0316021790555087600160006101000a8154816001600160701b0302191690836001600160701b03160217905550866001600e6101000a8154816001600160601b0302191690836001600160601b03160217905550856002601c6101000a81548161ffff021916908361ffff160217905550846001601a6101000a81548163ffffffff021916908363ffffffff160217905550836001601e6101000a81548161ffff021916908361ffff16021790555082600260146101000a81548163ffffffff021916908363ffffffff16021790555081600260186101000a81548163ffffffff021916908363ffffffff160217905550806002601e6101000a81548160ff0219169083151502179055506000805160206137f0833981519152888a896040516116ec939291906133eb565b60405180910390a160405161ffff871681526000805160206137d08339815191529060200160405180910390a1600080516020613790833981519152838360405161173892919061341e565b60405180910390a1801561175e5760405160008051602061377083398151915290600090a15b50505050505050505050565b6000546040805180820190915260018152601960f91b6020820152906001600160a01b0316156117ad5760405162461bcd60e51b81526004016107bb9190613324565b50604080518082019091526002815261353960f01b60208201526001600160a01b0382166117ee5760405162461bcd60e51b81526004016107bb9190613324565b50600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b600080600061182d611811565b6001600160a01b0316632fb2067f876040518263ffffffff1660e01b81526004016118589190613310565b60206040518083038186803b15801561187057600080fd5b505afa158015611884573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a89190612ff3565b604051806040016040528060028152602001610d0d60f21b815250906118e15760405162461bcd60e51b81526004016107bb9190613324565b506118eb84611057565b60405180604001604052806002815260200161343560f01b815250906119245760405162461bcd60e51b81526004016107bb9190613324565b5060006119318686611ff6565b9050600061193d611811565b6001600160a01b0316632261b07f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561197557600080fd5b505afa158015611989573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ad9190612ebc565b6002546040516314fdc96760e11b81526001600160a01b0391821660048201526001600160701b03851660248201528a821660448201529116906329fb92ce9060640160206040518083038186803b158015611a0857600080fd5b505afa158015611a1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a40919061323c565b60025490915061271090611a5f90600160e01b900461ffff16836135dd565b611a6991906134cf565b9350611a7e6001600160701b03851682613665565b9450611a8a88826123da565b9250505093509350939050565b604080518082019091526002815261062760f31b60208201526001600160a01b038416611ad75760405162461bcd60e51b81526004016107bb9190613324565b50604080518082019091526002815261313960f01b60208201526001600160a01b038316611b185760405162461bcd60e51b81526004016107bb9190613324565b506001600160a01b0383811660008181526005602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b604080518082019091526002815261189960f11b60208201526001600160a01b038516611bbb5760405162461bcd60e51b81526004016107bb9190613324565b50604080518082019091526002815261313360f01b60208201526001600160a01b038416611bfc5760405162461bcd60e51b81526004016107bb9190613324565b50611c09848484846125b5565b6001600160a01b03841660009081526004602090815260409182902054825180840190935260028352610c4d60f21b918301919091529083821015611c615760405162461bcd60e51b81526004016107bb9190613324565b50611c6c8382613665565b6001600160a01b038087166000908152600460205260408082209390935590861681529081208054859290611ca29084906134b7565b92505081905550836001600160a01b0316856001600160a01b03166000805160206137b083398151915285604051611cdc91815260200190565b60405180910390a35050505050565b604080518082019091526002815261313560f01b60208201526001600160a01b038416611d2b5760405162461bcd60e51b81526004016107bb9190613324565b50611d3960008484846125b5565b8160066000828254611d4b91906134b7565b90915550506001600160a01b03831660009081526004602052604081208054849290611d789084906134b7565b90915550506040518281526001600160a01b038416906000906000805160206137b083398151915290602001611b6e565b600080611db584611091565b905084602001516001600160701b0316816001600160701b03161115611e1557611e038560400151866020015183611ded919061363d565b600154600160d01b900463ffffffff16866128ad565b611e0d908261363d565b91505061095a565b611e2d8560400151828760200151611ded919061363d565b611e0d908261348c565b604080518082019091526002815261189b60f11b60208201526001600160a01b038416611e775760405162461bcd60e51b81526004016107bb9190613324565b50611e8583600084846125b5565b6001600160a01b0383166000908152600460209081526040918290205482518084019093526002835261313760f01b918301919091529083821015611edd5760405162461bcd60e51b81526004016107bb9190613324565b50611ee88382613665565b6001600160a01b03851660009081526004602052604081209190915560068054859290611f16908490613665565b90915550506040518381526000906001600160a01b038616906000805160206137b08339815191529060200160405180910390a350505050565b6040516001600160a01b038316602482015260448101829052611fb390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612a4e565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052611ff09085906323b872dd60e01b90608401611f7c565b50505050565b600080612001611811565b90506000816001600160a01b03166359bf5d396040518163ffffffff1660e01b815260040160206040518083038186803b15801561203e57600080fd5b505afa158015612052573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612076919061323c565b90506000826001600160a01b031663fcb2884e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156120b357600080fd5b505afa1580156120c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120eb919061323c565b905060006120f98284613665565b9050866001600160701b0316811161211e576001600160701b039450505050506106f7565b6002546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561216357600080fd5b505afa158015612177573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061219b91906132ac565b856001600160a01b03166360f870876040518163ffffffff1660e01b815260040160206040518083038186803b1580156121d457600080fd5b505afa1580156121e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061220c9190612ebc565b6001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561224457600080fd5b505afa158015612258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061227c91906132ac565b61228691906135fc565b9050600080866001600160a01b031663faac38ef6040518163ffffffff1660e01b8152600401604080518083038186803b1580156122c357600080fd5b505afa1580156122d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122fb9190613254565b9150915060008963ffffffff1661231e8c6001600160701b031685858b8b612b20565b61232891906135dd565b905060008460000b131561236c57604061234385600a613532565b600154612359906001600160701b0316846135dd565b61236391906134cf565b901c90506123cc565b60008460000b12156123ae576040612383856136e3565b61238e90600a613532565b6001546123a4906001600160701b0316846135dd565b61236391906135dd565b6001546040906123c7906001600160701b0316836135dd565b901c90505b9a9950505050505050505050565b6000806127106123e8611811565b6001600160a01b031663b406bf6d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561242057600080fd5b505afa158015612434573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124589190613208565b6124669061ffff16856135dd565b61247091906134cf565b9050600061247c611811565b6001600160a01b0316632261b07f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156124b457600080fd5b505afa1580156124c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124ec9190612ebc565b6002546001546040516314fdc96760e11b81526001600160a01b039283166004820152600160701b9091046001600160601b0316602482015287821660448201529116906329fb92ce9060640160206040518083038186803b15801561255157600080fd5b505afa158015612565573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612589919061323c565b9050806001600160701b0316826001600160701b0316106125aa57816125ac565b805b95945050505050565b6001600160a01b03848116159084161581806125ce5750805b806125e25750600254600160f81b900460ff165b60405180604001604052806002815260200161038360f41b8152509061261b5760405162461bcd60e51b81526004016107bb9190613324565b504282612790576001600160a01b038716600090815260036020908152604091829020825160608101845290546001600160701b038082168352600160701b82041692820192909252600160e01b90910463ffffffff1691810191909152612684818984611da9565b6001600160701b0316602082015263ffffffff82166040820152846127035780516001600160701b0316866126b88a611091565b6126c29190613665565b1015604051806040016040528060028152602001610dcd60f21b815250906126fd5760405162461bcd60e51b81526004016107bb9190613324565b50612722565b8581600001818151612715919061363d565b6001600160701b03169052505b6001600160a01b0388166000908152600360209081526040918290208351815492850151939094015163ffffffff16600160e01b026001600160e01b036001600160701b03948516600160701b026001600160e01b0319909416949095169390931791909117929092161790555b816128a4576001600160a01b038616600090815260036020908152604091829020825160608101845290546001600160701b038082168352600160701b82041692820192909252600160e01b90910463ffffffff16918101919091526127f7818884611da9565b6001600160701b0316602082015263ffffffff821660408201528415612836578581600001818151612829919061348c565b6001600160701b03169052505b6001600160a01b0387166000908152600360209081526040918290208351815492850151939094015163ffffffff16600160e01b026001600160e01b036001600160701b03948516600160701b026001600160e01b0319909416949095169390931791909117929092161790555b50505050505050565b60008463ffffffff168263ffffffff161015604051806040016040528060018152602001600760fb1b815250906128f75760405162461bcd60e51b81526004016107bb9190613324565b5084820391508263ffffffff168263ffffffff168161292657634e487b7160e01b600052601260045260246000fd5b0463ffffffff16846001600160701b0316901c93508263ffffffff168263ffffffff168161296457634e487b7160e01b600052601260045260246000fd5b06915063ffffffff8216158061298157506001600160701b038416155b1561298d575082610c0d565b60006001600160701b0385168163ffffffff86811690861671b17217f7d1cf79abc9e3b39803f2f6af40f302816129d457634e487b7160e01b600052601260045260246000fd5b049050600160901b5b8215612a4157928201928082840281612a0657634e487b7160e01b600052601260045260246000fd5b0493849003939250600160901b018082840281612a3357634e487b7160e01b600052601260045260246000fd5b049250600160901b016129dd565b5091979650505050505050565b6000612aa3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612b609092919063ffffffff16565b805190915015611fb35780806020019051810190612ac19190612ff3565b611fb35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107bb565b6000612b2e82868686612b6f565b612b4c612b446001600160801b038916856134b7565b878787612b6f565b612b569190613665565b9695505050505050565b6060610c0d8484600085612bb2565b60006040612b9d8382612b828983613665565b612b8d92911b6134cf565b6001600160801b03168686612cda565b612ba790876135dd565b901c95945050505050565b606082471015612c135760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016107bb565b843b612c615760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107bb565b600080866001600160a01b03168587604051612c7d91906132f4565b60006040518083038185875af1925050503d8060008114612cba576040519150601f19603f3d011682016040523d82523d6000602084013e612cbf565b606091505b5091509150612ccf828286612d36565b979650505050505050565b6000828411612cf157506001600160801b0361095a565b612cff82600160401b613665565b612d098486613665565b83612d1886600160401b613665565b612d2291906135dd565b612d2c91906134cf565b610c0d91906134b7565b60608315612d4557508161095a565b825115612d555782518084602001fd5b8160405162461bcd60e51b81526004016107bb9190613324565b828054612d7b906136a8565b90600052602060002090601f016020900481019282612d9d5760008555612de3565b82601f10612db657805160ff1916838001178555612de3565b82800160010185558215612de3579182015b82811115612de3578251825591602001919060010190612dc8565b50612def929150612df3565b5090565b5b80821115612def5760008155600101612df4565b600082601f830112612e18578081fd5b8135612e2b612e2682613465565b613435565b818152846020838601011115612e3f578283fd5b816020850160208301379081016020019190915292915050565b80356001600160701b0381168114612e7057600080fd5b919050565b803563ffffffff81168114612e7057600080fd5b80356001600160601b0381168114612e7057600080fd5b600060208284031215612eb1578081fd5b813561095a8161372d565b600060208284031215612ecd578081fd5b815161095a8161372d565b60008060408385031215612eea578081fd5b8235612ef58161372d565b91506020830135612f058161372d565b809150509250929050565b600080600060608486031215612f24578081fd5b8335612f2f8161372d565b92506020840135612f3f8161372d565b929592945050506040919091013590565b600080600060608486031215612f64578283fd5b8335612f6f8161372d565b9250612f7d60208501612e59565b9150612f8b60408501612e75565b90509250925092565b60008060408385031215612fa6578182fd5b8235612fb18161372d565b946020939093013593505050565b60008060408385031215612fd1578182fd5b8235612fdc8161372d565b9150612fea60208401612e75565b90509250929050565b600060208284031215613004578081fd5b815161095a81613742565b6000806000806000806000806000806101408b8d03121561302e578788fd5b8a356130398161372d565b995060208b01356130498161372d565b985061305760408c01612e59565b975061306560608c01612e89565b965060808b013561307581613750565b955061308360a08c01612e75565b945060c08b013561309381613750565b93506130a160e08c01612e75565b92506130b06101008c01612e75565b91506101208b01356130c181613742565b809150509295989b9194979a5092959850565b6000602082840312156130e5578081fd5b81516001600160401b038111156130fa578182fd5b8201601f8101841361310a578182fd5b8051613118612e2682613465565b81815285602083850101111561312c578384fd5b6125ac82602083016020860161367c565b600080600060608486031215613151578081fd5b83356001600160401b0380821115613167578283fd5b61317387838801612e08565b94506020860135915080821115613188578283fd5b5061319586828701612e08565b92505060408401356131a681613760565b809150509250925092565b6000806000606084860312156131c5578081fd5b6131ce84612e59565b925060208401356131de8161372d565b9150612f8b60408501612e89565b6000602082840312156131fd578081fd5b813561095a81613750565b600060208284031215613219578081fd5b815161095a81613750565b600060208284031215613235578081fd5b5035919050565b60006020828403121561324d578081fd5b5051919050565b60008060408385031215613266578182fd5b505080516020909101519092909150565b600060208284031215613288578081fd5b61095a82612e75565b600080604083850312156132a3578182fd5b612fdc83612e75565b6000602082840312156132bd578081fd5b815161095a81613760565b600081518084526132e081602086016020860161367c565b601f01601f19169290920160200192915050565b6000825161330681846020870161367c565b9190910192915050565b6001600160a01b0391909116815260200190565b60208152600061095a60208301846132c8565b6101808152600061334c61018083018f6132c8565b828103602084015261335e818f6132c8565b6001600160a01b038e1660408501526001600160701b038d1660608501526001600160601b038c16608085015261ffff8b1660a085015263ffffffff8a1660c085015291506133aa9050565b61ffff9690961660e082015263ffffffff94851661010082015292909316610120830152151561014082015290151561016090910152979650505050505050565b6001600160701b039390931683526001600160a01b039190911660208301526001600160601b0316604082015260600190565b63ffffffff92831681529116602082015260400190565b604051601f8201601f191681016001600160401b038111828210171561345d5761345d613717565b604052919050565b60006001600160401b0382111561347e5761347e613717565b50601f01601f191660200190565b60006001600160701b038281168482168083038211156134ae576134ae613701565b01949350505050565b600082198211156134ca576134ca613701565b500190565b6000826134ea57634e487b7160e01b81526012600452602481fd5b500490565b600181815b8085111561352a57816000190482111561351057613510613701565b8085161561351d57918102915b93841c93908002906134f4565b509250929050565b600061095a60ff84168360008261354b575060016106f7565b81613558575060006106f7565b816001811461356e576002811461357857613594565b60019150506106f7565b60ff84111561358957613589613701565b50506001821b6106f7565b5060208310610133831016604e8410600b84101617156135b7575081810a6106f7565b6135c183836134ef565b80600019048211156135d5576135d5613701565b029392505050565b60008160001904831182151516156135f7576135f7613701565b500290565b600081810b83820b8281128015607f1983018412161561361e5761361e613701565b81607f01831381161561363357613633613701565b5090039392505050565b60006001600160701b038381169083168181101561365d5761365d613701565b039392505050565b60008282101561367757613677613701565b500390565b60005b8381101561369757818101518382015260200161367f565b83811115611ff05750506000910152565b600181811c908216806136bc57607f821691505b602082108114156136dd57634e487b7160e01b600052602260045260246000fd5b50919050565b600081810b607f198114156136fa576136fa613701565b9003919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461041057600080fd5b801515811461041057600080fd5b61ffff8116811461041057600080fd5b60ff8116811461041057600080fdfe4f8e8d44a98a830b5142e61afa1cc8dacbf21291bcd657e26d2c7780e2c7fac461db23004a2218e8ecbda348735cc62eaaf3ca857e2705615a8d91acf6d7b817ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef7b5d5b53df75c87d5bea0f0535cd81a355db537ee2ca5dcea9849433d99847b92833a6b2910014b082775316936860d808d821fc59634fa08bc19c19427fa99da2646970667358221220153c30d39aec93f67908ff320fa8f7a6112f1fb9d199fda53a7a6639499e1ada64736f6c63430008040033",
}

// PowerTokenABI is the input ABI used to generate the binding from.
// Deprecated: Use PowerTokenMetaData.ABI instead.
var PowerTokenABI = PowerTokenMetaData.ABI

// PowerTokenBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use PowerTokenMetaData.Bin instead.
var PowerTokenBin = PowerTokenMetaData.Bin

// DeployPowerToken deploys a new Ethereum contract, binding an instance of PowerToken to it.
func DeployPowerToken(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *PowerToken, error) {
	parsed, err := PowerTokenMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(PowerTokenBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &PowerToken{PowerTokenCaller: PowerTokenCaller{contract: contract}, PowerTokenTransactor: PowerTokenTransactor{contract: contract}, PowerTokenFilterer: PowerTokenFilterer{contract: contract}}, nil
}

// PowerToken is an auto generated Go binding around an Ethereum contract.
type PowerToken struct {
	PowerTokenCaller     // Read-only binding to the contract
	PowerTokenTransactor // Write-only binding to the contract
	PowerTokenFilterer   // Log filterer for contract events
}

// PowerTokenCaller is an auto generated read-only Go binding around an Ethereum contract.
type PowerTokenCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// PowerTokenTransactor is an auto generated write-only Go binding around an Ethereum contract.
type PowerTokenTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// PowerTokenFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type PowerTokenFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// PowerTokenSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type PowerTokenSession struct {
	Contract     *PowerToken       // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// PowerTokenCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type PowerTokenCallerSession struct {
	Contract *PowerTokenCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts     // Call options to use throughout this session
}

// PowerTokenTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type PowerTokenTransactorSession struct {
	Contract     *PowerTokenTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// PowerTokenRaw is an auto generated low-level Go binding around an Ethereum contract.
type PowerTokenRaw struct {
	Contract *PowerToken // Generic contract binding to access the raw methods on
}

// PowerTokenCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type PowerTokenCallerRaw struct {
	Contract *PowerTokenCaller // Generic read-only contract binding to access the raw methods on
}

// PowerTokenTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type PowerTokenTransactorRaw struct {
	Contract *PowerTokenTransactor // Generic write-only contract binding to access the raw methods on
}

// NewPowerToken creates a new instance of PowerToken, bound to a specific deployed contract.
func NewPowerToken(address common.Address, backend bind.ContractBackend) (*PowerToken, error) {
	contract, err := bindPowerToken(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &PowerToken{PowerTokenCaller: PowerTokenCaller{contract: contract}, PowerTokenTransactor: PowerTokenTransactor{contract: contract}, PowerTokenFilterer: PowerTokenFilterer{contract: contract}}, nil
}

// NewPowerTokenCaller creates a new read-only instance of PowerToken, bound to a specific deployed contract.
func NewPowerTokenCaller(address common.Address, caller bind.ContractCaller) (*PowerTokenCaller, error) {
	contract, err := bindPowerToken(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &PowerTokenCaller{contract: contract}, nil
}

// NewPowerTokenTransactor creates a new write-only instance of PowerToken, bound to a specific deployed contract.
func NewPowerTokenTransactor(address common.Address, transactor bind.ContractTransactor) (*PowerTokenTransactor, error) {
	contract, err := bindPowerToken(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &PowerTokenTransactor{contract: contract}, nil
}

// NewPowerTokenFilterer creates a new log filterer instance of PowerToken, bound to a specific deployed contract.
func NewPowerTokenFilterer(address common.Address, filterer bind.ContractFilterer) (*PowerTokenFilterer, error) {
	contract, err := bindPowerToken(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &PowerTokenFilterer{contract: contract}, nil
}

// bindPowerToken binds a generic wrapper to an already deployed contract.
func bindPowerToken(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(PowerTokenABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_PowerToken *PowerTokenRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _PowerToken.Contract.PowerTokenCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_PowerToken *PowerTokenRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _PowerToken.Contract.PowerTokenTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_PowerToken *PowerTokenRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _PowerToken.Contract.PowerTokenTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_PowerToken *PowerTokenCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _PowerToken.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_PowerToken *PowerTokenTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _PowerToken.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_PowerToken *PowerTokenTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _PowerToken.Contract.contract.Transact(opts, method, params...)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_PowerToken *PowerTokenCaller) Allowance(opts *bind.CallOpts, owner common.Address, spender common.Address) (*big.Int, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "allowance", owner, spender)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_PowerToken *PowerTokenSession) Allowance(owner common.Address, spender common.Address) (*big.Int, error) {
	return _PowerToken.Contract.Allowance(&_PowerToken.CallOpts, owner, spender)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address owner, address spender) view returns(uint256)
func (_PowerToken *PowerTokenCallerSession) Allowance(owner common.Address, spender common.Address) (*big.Int, error) {
	return _PowerToken.Contract.Allowance(&_PowerToken.CallOpts, owner, spender)
}

// AvailableBalanceOf is a free data retrieval call binding the contract method 0x25d998bb.
//
// Solidity: function availableBalanceOf(address account) view returns(uint256)
func (_PowerToken *PowerTokenCaller) AvailableBalanceOf(opts *bind.CallOpts, account common.Address) (*big.Int, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "availableBalanceOf", account)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// AvailableBalanceOf is a free data retrieval call binding the contract method 0x25d998bb.
//
// Solidity: function availableBalanceOf(address account) view returns(uint256)
func (_PowerToken *PowerTokenSession) AvailableBalanceOf(account common.Address) (*big.Int, error) {
	return _PowerToken.Contract.AvailableBalanceOf(&_PowerToken.CallOpts, account)
}

// AvailableBalanceOf is a free data retrieval call binding the contract method 0x25d998bb.
//
// Solidity: function availableBalanceOf(address account) view returns(uint256)
func (_PowerToken *PowerTokenCallerSession) AvailableBalanceOf(account common.Address) (*big.Int, error) {
	return _PowerToken.Contract.AvailableBalanceOf(&_PowerToken.CallOpts, account)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_PowerToken *PowerTokenCaller) BalanceOf(opts *bind.CallOpts, account common.Address) (*big.Int, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "balanceOf", account)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_PowerToken *PowerTokenSession) BalanceOf(account common.Address) (*big.Int, error) {
	return _PowerToken.Contract.BalanceOf(&_PowerToken.CallOpts, account)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address account) view returns(uint256)
func (_PowerToken *PowerTokenCallerSession) BalanceOf(account common.Address) (*big.Int, error) {
	return _PowerToken.Contract.BalanceOf(&_PowerToken.CallOpts, account)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_PowerToken *PowerTokenCaller) Decimals(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "decimals")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_PowerToken *PowerTokenSession) Decimals() (uint8, error) {
	return _PowerToken.Contract.Decimals(&_PowerToken.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_PowerToken *PowerTokenCallerSession) Decimals() (uint8, error) {
	return _PowerToken.Contract.Decimals(&_PowerToken.CallOpts)
}

// EnergyAt is a free data retrieval call binding the contract method 0x5370028e.
//
// Solidity: function energyAt(address who, uint32 timestamp) view returns(uint112)
func (_PowerToken *PowerTokenCaller) EnergyAt(opts *bind.CallOpts, who common.Address, timestamp uint32) (*big.Int, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "energyAt", who, timestamp)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// EnergyAt is a free data retrieval call binding the contract method 0x5370028e.
//
// Solidity: function energyAt(address who, uint32 timestamp) view returns(uint112)
func (_PowerToken *PowerTokenSession) EnergyAt(who common.Address, timestamp uint32) (*big.Int, error) {
	return _PowerToken.Contract.EnergyAt(&_PowerToken.CallOpts, who, timestamp)
}

// EnergyAt is a free data retrieval call binding the contract method 0x5370028e.
//
// Solidity: function energyAt(address who, uint32 timestamp) view returns(uint112)
func (_PowerToken *PowerTokenCallerSession) EnergyAt(who common.Address, timestamp uint32) (*big.Int, error) {
	return _PowerToken.Contract.EnergyAt(&_PowerToken.CallOpts, who, timestamp)
}

// EstimateRentalFee is a free data retrieval call binding the contract method 0xff1fb886.
//
// Solidity: function estimateRentalFee(address paymentToken, uint112 rentalAmount, uint32 rentalPeriod) view returns(uint112 poolFee, uint112 serviceFee, uint112 gcFee)
func (_PowerToken *PowerTokenCaller) EstimateRentalFee(opts *bind.CallOpts, paymentToken common.Address, rentalAmount *big.Int, rentalPeriod uint32) (struct {
	PoolFee    *big.Int
	ServiceFee *big.Int
	GcFee      *big.Int
}, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "estimateRentalFee", paymentToken, rentalAmount, rentalPeriod)

	outstruct := new(struct {
		PoolFee    *big.Int
		ServiceFee *big.Int
		GcFee      *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.PoolFee = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.ServiceFee = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.GcFee = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// EstimateRentalFee is a free data retrieval call binding the contract method 0xff1fb886.
//
// Solidity: function estimateRentalFee(address paymentToken, uint112 rentalAmount, uint32 rentalPeriod) view returns(uint112 poolFee, uint112 serviceFee, uint112 gcFee)
func (_PowerToken *PowerTokenSession) EstimateRentalFee(paymentToken common.Address, rentalAmount *big.Int, rentalPeriod uint32) (struct {
	PoolFee    *big.Int
	ServiceFee *big.Int
	GcFee      *big.Int
}, error) {
	return _PowerToken.Contract.EstimateRentalFee(&_PowerToken.CallOpts, paymentToken, rentalAmount, rentalPeriod)
}

// EstimateRentalFee is a free data retrieval call binding the contract method 0xff1fb886.
//
// Solidity: function estimateRentalFee(address paymentToken, uint112 rentalAmount, uint32 rentalPeriod) view returns(uint112 poolFee, uint112 serviceFee, uint112 gcFee)
func (_PowerToken *PowerTokenCallerSession) EstimateRentalFee(paymentToken common.Address, rentalAmount *big.Int, rentalPeriod uint32) (struct {
	PoolFee    *big.Int
	ServiceFee *big.Int
	GcFee      *big.Int
}, error) {
	return _PowerToken.Contract.EstimateRentalFee(&_PowerToken.CallOpts, paymentToken, rentalAmount, rentalPeriod)
}

// GetBaseRate is a free data retrieval call binding the contract method 0xb655d0c4.
//
// Solidity: function getBaseRate() view returns(uint112)
func (_PowerToken *PowerTokenCaller) GetBaseRate(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getBaseRate")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetBaseRate is a free data retrieval call binding the contract method 0xb655d0c4.
//
// Solidity: function getBaseRate() view returns(uint112)
func (_PowerToken *PowerTokenSession) GetBaseRate() (*big.Int, error) {
	return _PowerToken.Contract.GetBaseRate(&_PowerToken.CallOpts)
}

// GetBaseRate is a free data retrieval call binding the contract method 0xb655d0c4.
//
// Solidity: function getBaseRate() view returns(uint112)
func (_PowerToken *PowerTokenCallerSession) GetBaseRate() (*big.Int, error) {
	return _PowerToken.Contract.GetBaseRate(&_PowerToken.CallOpts)
}

// GetBaseToken is a free data retrieval call binding the contract method 0x98acd7a6.
//
// Solidity: function getBaseToken() view returns(address)
func (_PowerToken *PowerTokenCaller) GetBaseToken(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getBaseToken")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetBaseToken is a free data retrieval call binding the contract method 0x98acd7a6.
//
// Solidity: function getBaseToken() view returns(address)
func (_PowerToken *PowerTokenSession) GetBaseToken() (common.Address, error) {
	return _PowerToken.Contract.GetBaseToken(&_PowerToken.CallOpts)
}

// GetBaseToken is a free data retrieval call binding the contract method 0x98acd7a6.
//
// Solidity: function getBaseToken() view returns(address)
func (_PowerToken *PowerTokenCallerSession) GetBaseToken() (common.Address, error) {
	return _PowerToken.Contract.GetBaseToken(&_PowerToken.CallOpts)
}

// GetEnergyGapHalvingPeriod is a free data retrieval call binding the contract method 0xcec2f246.
//
// Solidity: function getEnergyGapHalvingPeriod() view returns(uint32)
func (_PowerToken *PowerTokenCaller) GetEnergyGapHalvingPeriod(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getEnergyGapHalvingPeriod")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// GetEnergyGapHalvingPeriod is a free data retrieval call binding the contract method 0xcec2f246.
//
// Solidity: function getEnergyGapHalvingPeriod() view returns(uint32)
func (_PowerToken *PowerTokenSession) GetEnergyGapHalvingPeriod() (uint32, error) {
	return _PowerToken.Contract.GetEnergyGapHalvingPeriod(&_PowerToken.CallOpts)
}

// GetEnergyGapHalvingPeriod is a free data retrieval call binding the contract method 0xcec2f246.
//
// Solidity: function getEnergyGapHalvingPeriod() view returns(uint32)
func (_PowerToken *PowerTokenCallerSession) GetEnergyGapHalvingPeriod() (uint32, error) {
	return _PowerToken.Contract.GetEnergyGapHalvingPeriod(&_PowerToken.CallOpts)
}

// GetEnterprise is a free data retrieval call binding the contract method 0xe298a2fd.
//
// Solidity: function getEnterprise() view returns(address)
func (_PowerToken *PowerTokenCaller) GetEnterprise(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getEnterprise")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetEnterprise is a free data retrieval call binding the contract method 0xe298a2fd.
//
// Solidity: function getEnterprise() view returns(address)
func (_PowerToken *PowerTokenSession) GetEnterprise() (common.Address, error) {
	return _PowerToken.Contract.GetEnterprise(&_PowerToken.CallOpts)
}

// GetEnterprise is a free data retrieval call binding the contract method 0xe298a2fd.
//
// Solidity: function getEnterprise() view returns(address)
func (_PowerToken *PowerTokenCallerSession) GetEnterprise() (common.Address, error) {
	return _PowerToken.Contract.GetEnterprise(&_PowerToken.CallOpts)
}

// GetIndex is a free data retrieval call binding the contract method 0x81045ead.
//
// Solidity: function getIndex() view returns(uint16)
func (_PowerToken *PowerTokenCaller) GetIndex(opts *bind.CallOpts) (uint16, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getIndex")

	if err != nil {
		return *new(uint16), err
	}

	out0 := *abi.ConvertType(out[0], new(uint16)).(*uint16)

	return out0, err

}

// GetIndex is a free data retrieval call binding the contract method 0x81045ead.
//
// Solidity: function getIndex() view returns(uint16)
func (_PowerToken *PowerTokenSession) GetIndex() (uint16, error) {
	return _PowerToken.Contract.GetIndex(&_PowerToken.CallOpts)
}

// GetIndex is a free data retrieval call binding the contract method 0x81045ead.
//
// Solidity: function getIndex() view returns(uint16)
func (_PowerToken *PowerTokenCallerSession) GetIndex() (uint16, error) {
	return _PowerToken.Contract.GetIndex(&_PowerToken.CallOpts)
}

// GetInfo is a free data retrieval call binding the contract method 0x5a9b0b89.
//
// Solidity: function getInfo() view returns(string name, string symbol, address baseToken, uint112 baseRate, uint96 minGCFee, uint16 serviceFeePercent, uint32 energyGapHalvingPeriod, uint16 index, uint32 minRentalPeriod, uint32 maxRentalPeriod, bool swappingEnabled, bool transferEnabled)
func (_PowerToken *PowerTokenCaller) GetInfo(opts *bind.CallOpts) (struct {
	Name                   string
	Symbol                 string
	BaseToken              common.Address
	BaseRate               *big.Int
	MinGCFee               *big.Int
	ServiceFeePercent      uint16
	EnergyGapHalvingPeriod uint32
	Index                  uint16
	MinRentalPeriod        uint32
	MaxRentalPeriod        uint32
	SwappingEnabled        bool
	TransferEnabled        bool
}, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getInfo")

	outstruct := new(struct {
		Name                   string
		Symbol                 string
		BaseToken              common.Address
		BaseRate               *big.Int
		MinGCFee               *big.Int
		ServiceFeePercent      uint16
		EnergyGapHalvingPeriod uint32
		Index                  uint16
		MinRentalPeriod        uint32
		MaxRentalPeriod        uint32
		SwappingEnabled        bool
		TransferEnabled        bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Name = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.Symbol = *abi.ConvertType(out[1], new(string)).(*string)
	outstruct.BaseToken = *abi.ConvertType(out[2], new(common.Address)).(*common.Address)
	outstruct.BaseRate = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	outstruct.MinGCFee = *abi.ConvertType(out[4], new(*big.Int)).(**big.Int)
	outstruct.ServiceFeePercent = *abi.ConvertType(out[5], new(uint16)).(*uint16)
	outstruct.EnergyGapHalvingPeriod = *abi.ConvertType(out[6], new(uint32)).(*uint32)
	outstruct.Index = *abi.ConvertType(out[7], new(uint16)).(*uint16)
	outstruct.MinRentalPeriod = *abi.ConvertType(out[8], new(uint32)).(*uint32)
	outstruct.MaxRentalPeriod = *abi.ConvertType(out[9], new(uint32)).(*uint32)
	outstruct.SwappingEnabled = *abi.ConvertType(out[10], new(bool)).(*bool)
	outstruct.TransferEnabled = *abi.ConvertType(out[11], new(bool)).(*bool)

	return *outstruct, err

}

// GetInfo is a free data retrieval call binding the contract method 0x5a9b0b89.
//
// Solidity: function getInfo() view returns(string name, string symbol, address baseToken, uint112 baseRate, uint96 minGCFee, uint16 serviceFeePercent, uint32 energyGapHalvingPeriod, uint16 index, uint32 minRentalPeriod, uint32 maxRentalPeriod, bool swappingEnabled, bool transferEnabled)
func (_PowerToken *PowerTokenSession) GetInfo() (struct {
	Name                   string
	Symbol                 string
	BaseToken              common.Address
	BaseRate               *big.Int
	MinGCFee               *big.Int
	ServiceFeePercent      uint16
	EnergyGapHalvingPeriod uint32
	Index                  uint16
	MinRentalPeriod        uint32
	MaxRentalPeriod        uint32
	SwappingEnabled        bool
	TransferEnabled        bool
}, error) {
	return _PowerToken.Contract.GetInfo(&_PowerToken.CallOpts)
}

// GetInfo is a free data retrieval call binding the contract method 0x5a9b0b89.
//
// Solidity: function getInfo() view returns(string name, string symbol, address baseToken, uint112 baseRate, uint96 minGCFee, uint16 serviceFeePercent, uint32 energyGapHalvingPeriod, uint16 index, uint32 minRentalPeriod, uint32 maxRentalPeriod, bool swappingEnabled, bool transferEnabled)
func (_PowerToken *PowerTokenCallerSession) GetInfo() (struct {
	Name                   string
	Symbol                 string
	BaseToken              common.Address
	BaseRate               *big.Int
	MinGCFee               *big.Int
	ServiceFeePercent      uint16
	EnergyGapHalvingPeriod uint32
	Index                  uint16
	MinRentalPeriod        uint32
	MaxRentalPeriod        uint32
	SwappingEnabled        bool
	TransferEnabled        bool
}, error) {
	return _PowerToken.Contract.GetInfo(&_PowerToken.CallOpts)
}

// GetMaxRentalPeriod is a free data retrieval call binding the contract method 0xd29cc7c0.
//
// Solidity: function getMaxRentalPeriod() view returns(uint32)
func (_PowerToken *PowerTokenCaller) GetMaxRentalPeriod(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getMaxRentalPeriod")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// GetMaxRentalPeriod is a free data retrieval call binding the contract method 0xd29cc7c0.
//
// Solidity: function getMaxRentalPeriod() view returns(uint32)
func (_PowerToken *PowerTokenSession) GetMaxRentalPeriod() (uint32, error) {
	return _PowerToken.Contract.GetMaxRentalPeriod(&_PowerToken.CallOpts)
}

// GetMaxRentalPeriod is a free data retrieval call binding the contract method 0xd29cc7c0.
//
// Solidity: function getMaxRentalPeriod() view returns(uint32)
func (_PowerToken *PowerTokenCallerSession) GetMaxRentalPeriod() (uint32, error) {
	return _PowerToken.Contract.GetMaxRentalPeriod(&_PowerToken.CallOpts)
}

// GetMinGCFee is a free data retrieval call binding the contract method 0x0aff9d19.
//
// Solidity: function getMinGCFee() view returns(uint96)
func (_PowerToken *PowerTokenCaller) GetMinGCFee(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getMinGCFee")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetMinGCFee is a free data retrieval call binding the contract method 0x0aff9d19.
//
// Solidity: function getMinGCFee() view returns(uint96)
func (_PowerToken *PowerTokenSession) GetMinGCFee() (*big.Int, error) {
	return _PowerToken.Contract.GetMinGCFee(&_PowerToken.CallOpts)
}

// GetMinGCFee is a free data retrieval call binding the contract method 0x0aff9d19.
//
// Solidity: function getMinGCFee() view returns(uint96)
func (_PowerToken *PowerTokenCallerSession) GetMinGCFee() (*big.Int, error) {
	return _PowerToken.Contract.GetMinGCFee(&_PowerToken.CallOpts)
}

// GetMinRentalPeriod is a free data retrieval call binding the contract method 0xfcc4b67d.
//
// Solidity: function getMinRentalPeriod() view returns(uint32)
func (_PowerToken *PowerTokenCaller) GetMinRentalPeriod(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getMinRentalPeriod")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// GetMinRentalPeriod is a free data retrieval call binding the contract method 0xfcc4b67d.
//
// Solidity: function getMinRentalPeriod() view returns(uint32)
func (_PowerToken *PowerTokenSession) GetMinRentalPeriod() (uint32, error) {
	return _PowerToken.Contract.GetMinRentalPeriod(&_PowerToken.CallOpts)
}

// GetMinRentalPeriod is a free data retrieval call binding the contract method 0xfcc4b67d.
//
// Solidity: function getMinRentalPeriod() view returns(uint32)
func (_PowerToken *PowerTokenCallerSession) GetMinRentalPeriod() (uint32, error) {
	return _PowerToken.Contract.GetMinRentalPeriod(&_PowerToken.CallOpts)
}

// GetServiceFeePercent is a free data retrieval call binding the contract method 0x6dfbee1b.
//
// Solidity: function getServiceFeePercent() view returns(uint16)
func (_PowerToken *PowerTokenCaller) GetServiceFeePercent(opts *bind.CallOpts) (uint16, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getServiceFeePercent")

	if err != nil {
		return *new(uint16), err
	}

	out0 := *abi.ConvertType(out[0], new(uint16)).(*uint16)

	return out0, err

}

// GetServiceFeePercent is a free data retrieval call binding the contract method 0x6dfbee1b.
//
// Solidity: function getServiceFeePercent() view returns(uint16)
func (_PowerToken *PowerTokenSession) GetServiceFeePercent() (uint16, error) {
	return _PowerToken.Contract.GetServiceFeePercent(&_PowerToken.CallOpts)
}

// GetServiceFeePercent is a free data retrieval call binding the contract method 0x6dfbee1b.
//
// Solidity: function getServiceFeePercent() view returns(uint16)
func (_PowerToken *PowerTokenCallerSession) GetServiceFeePercent() (uint16, error) {
	return _PowerToken.Contract.GetServiceFeePercent(&_PowerToken.CallOpts)
}

// GetState is a free data retrieval call binding the contract method 0x1bab58f5.
//
// Solidity: function getState(address account) view returns((uint112,uint112,uint32))
func (_PowerToken *PowerTokenCaller) GetState(opts *bind.CallOpts, account common.Address) (PowerTokenStorageState, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "getState", account)

	if err != nil {
		return *new(PowerTokenStorageState), err
	}

	out0 := *abi.ConvertType(out[0], new(PowerTokenStorageState)).(*PowerTokenStorageState)

	return out0, err

}

// GetState is a free data retrieval call binding the contract method 0x1bab58f5.
//
// Solidity: function getState(address account) view returns((uint112,uint112,uint32))
func (_PowerToken *PowerTokenSession) GetState(account common.Address) (PowerTokenStorageState, error) {
	return _PowerToken.Contract.GetState(&_PowerToken.CallOpts, account)
}

// GetState is a free data retrieval call binding the contract method 0x1bab58f5.
//
// Solidity: function getState(address account) view returns((uint112,uint112,uint32))
func (_PowerToken *PowerTokenCallerSession) GetState(account common.Address) (PowerTokenStorageState, error) {
	return _PowerToken.Contract.GetState(&_PowerToken.CallOpts, account)
}

// IsAllowedRentalPeriod is a free data retrieval call binding the contract method 0x70005557.
//
// Solidity: function isAllowedRentalPeriod(uint32 period) view returns(bool)
func (_PowerToken *PowerTokenCaller) IsAllowedRentalPeriod(opts *bind.CallOpts, period uint32) (bool, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "isAllowedRentalPeriod", period)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsAllowedRentalPeriod is a free data retrieval call binding the contract method 0x70005557.
//
// Solidity: function isAllowedRentalPeriod(uint32 period) view returns(bool)
func (_PowerToken *PowerTokenSession) IsAllowedRentalPeriod(period uint32) (bool, error) {
	return _PowerToken.Contract.IsAllowedRentalPeriod(&_PowerToken.CallOpts, period)
}

// IsAllowedRentalPeriod is a free data retrieval call binding the contract method 0x70005557.
//
// Solidity: function isAllowedRentalPeriod(uint32 period) view returns(bool)
func (_PowerToken *PowerTokenCallerSession) IsAllowedRentalPeriod(period uint32) (bool, error) {
	return _PowerToken.Contract.IsAllowedRentalPeriod(&_PowerToken.CallOpts, period)
}

// IsSwappingEnabled is a free data retrieval call binding the contract method 0x4aa5028b.
//
// Solidity: function isSwappingEnabled() view returns(bool)
func (_PowerToken *PowerTokenCaller) IsSwappingEnabled(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "isSwappingEnabled")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsSwappingEnabled is a free data retrieval call binding the contract method 0x4aa5028b.
//
// Solidity: function isSwappingEnabled() view returns(bool)
func (_PowerToken *PowerTokenSession) IsSwappingEnabled() (bool, error) {
	return _PowerToken.Contract.IsSwappingEnabled(&_PowerToken.CallOpts)
}

// IsSwappingEnabled is a free data retrieval call binding the contract method 0x4aa5028b.
//
// Solidity: function isSwappingEnabled() view returns(bool)
func (_PowerToken *PowerTokenCallerSession) IsSwappingEnabled() (bool, error) {
	return _PowerToken.Contract.IsSwappingEnabled(&_PowerToken.CallOpts)
}

// IsTransferEnabled is a free data retrieval call binding the contract method 0xcca5dcb6.
//
// Solidity: function isTransferEnabled() view returns(bool)
func (_PowerToken *PowerTokenCaller) IsTransferEnabled(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "isTransferEnabled")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsTransferEnabled is a free data retrieval call binding the contract method 0xcca5dcb6.
//
// Solidity: function isTransferEnabled() view returns(bool)
func (_PowerToken *PowerTokenSession) IsTransferEnabled() (bool, error) {
	return _PowerToken.Contract.IsTransferEnabled(&_PowerToken.CallOpts)
}

// IsTransferEnabled is a free data retrieval call binding the contract method 0xcca5dcb6.
//
// Solidity: function isTransferEnabled() view returns(bool)
func (_PowerToken *PowerTokenCallerSession) IsTransferEnabled() (bool, error) {
	return _PowerToken.Contract.IsTransferEnabled(&_PowerToken.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_PowerToken *PowerTokenCaller) Name(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "name")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_PowerToken *PowerTokenSession) Name() (string, error) {
	return _PowerToken.Contract.Name(&_PowerToken.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_PowerToken *PowerTokenCallerSession) Name() (string, error) {
	return _PowerToken.Contract.Name(&_PowerToken.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_PowerToken *PowerTokenCaller) Symbol(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "symbol")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_PowerToken *PowerTokenSession) Symbol() (string, error) {
	return _PowerToken.Contract.Symbol(&_PowerToken.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_PowerToken *PowerTokenCallerSession) Symbol() (string, error) {
	return _PowerToken.Contract.Symbol(&_PowerToken.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_PowerToken *PowerTokenCaller) TotalSupply(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _PowerToken.contract.Call(opts, &out, "totalSupply")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_PowerToken *PowerTokenSession) TotalSupply() (*big.Int, error) {
	return _PowerToken.Contract.TotalSupply(&_PowerToken.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_PowerToken *PowerTokenCallerSession) TotalSupply() (*big.Int, error) {
	return _PowerToken.Contract.TotalSupply(&_PowerToken.CallOpts)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactor) Approve(opts *bind.TransactOpts, spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "approve", spender, amount)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenSession) Approve(spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.Approve(&_PowerToken.TransactOpts, spender, amount)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactorSession) Approve(spender common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.Approve(&_PowerToken.TransactOpts, spender, amount)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 value) returns()
func (_PowerToken *PowerTokenTransactor) BurnFrom(opts *bind.TransactOpts, account common.Address, value *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "burnFrom", account, value)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 value) returns()
func (_PowerToken *PowerTokenSession) BurnFrom(account common.Address, value *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.BurnFrom(&_PowerToken.TransactOpts, account, value)
}

// BurnFrom is a paid mutator transaction binding the contract method 0x79cc6790.
//
// Solidity: function burnFrom(address account, uint256 value) returns()
func (_PowerToken *PowerTokenTransactorSession) BurnFrom(account common.Address, value *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.BurnFrom(&_PowerToken.TransactOpts, account, value)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_PowerToken *PowerTokenTransactor) DecreaseAllowance(opts *bind.TransactOpts, spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "decreaseAllowance", spender, subtractedValue)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_PowerToken *PowerTokenSession) DecreaseAllowance(spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.DecreaseAllowance(&_PowerToken.TransactOpts, spender, subtractedValue)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 subtractedValue) returns(bool)
func (_PowerToken *PowerTokenTransactorSession) DecreaseAllowance(spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.DecreaseAllowance(&_PowerToken.TransactOpts, spender, subtractedValue)
}

// EnableSwappingForever is a paid mutator transaction binding the contract method 0x35528ee0.
//
// Solidity: function enableSwappingForever() returns()
func (_PowerToken *PowerTokenTransactor) EnableSwappingForever(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "enableSwappingForever")
}

// EnableSwappingForever is a paid mutator transaction binding the contract method 0x35528ee0.
//
// Solidity: function enableSwappingForever() returns()
func (_PowerToken *PowerTokenSession) EnableSwappingForever() (*types.Transaction, error) {
	return _PowerToken.Contract.EnableSwappingForever(&_PowerToken.TransactOpts)
}

// EnableSwappingForever is a paid mutator transaction binding the contract method 0x35528ee0.
//
// Solidity: function enableSwappingForever() returns()
func (_PowerToken *PowerTokenTransactorSession) EnableSwappingForever() (*types.Transaction, error) {
	return _PowerToken.Contract.EnableSwappingForever(&_PowerToken.TransactOpts)
}

// EnableTransferForever is a paid mutator transaction binding the contract method 0x659262a0.
//
// Solidity: function enableTransferForever() returns()
func (_PowerToken *PowerTokenTransactor) EnableTransferForever(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "enableTransferForever")
}

// EnableTransferForever is a paid mutator transaction binding the contract method 0x659262a0.
//
// Solidity: function enableTransferForever() returns()
func (_PowerToken *PowerTokenSession) EnableTransferForever() (*types.Transaction, error) {
	return _PowerToken.Contract.EnableTransferForever(&_PowerToken.TransactOpts)
}

// EnableTransferForever is a paid mutator transaction binding the contract method 0x659262a0.
//
// Solidity: function enableTransferForever() returns()
func (_PowerToken *PowerTokenTransactorSession) EnableTransferForever() (*types.Transaction, error) {
	return _PowerToken.Contract.EnableTransferForever(&_PowerToken.TransactOpts)
}

// ForceTransfer is a paid mutator transaction binding the contract method 0x33bebb77.
//
// Solidity: function forceTransfer(address from, address to, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactor) ForceTransfer(opts *bind.TransactOpts, from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "forceTransfer", from, to, amount)
}

// ForceTransfer is a paid mutator transaction binding the contract method 0x33bebb77.
//
// Solidity: function forceTransfer(address from, address to, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenSession) ForceTransfer(from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.ForceTransfer(&_PowerToken.TransactOpts, from, to, amount)
}

// ForceTransfer is a paid mutator transaction binding the contract method 0x33bebb77.
//
// Solidity: function forceTransfer(address from, address to, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactorSession) ForceTransfer(from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.ForceTransfer(&_PowerToken.TransactOpts, from, to, amount)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_PowerToken *PowerTokenTransactor) IncreaseAllowance(opts *bind.TransactOpts, spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "increaseAllowance", spender, addedValue)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_PowerToken *PowerTokenSession) IncreaseAllowance(spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.IncreaseAllowance(&_PowerToken.TransactOpts, spender, addedValue)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 addedValue) returns(bool)
func (_PowerToken *PowerTokenTransactorSession) IncreaseAllowance(spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.IncreaseAllowance(&_PowerToken.TransactOpts, spender, addedValue)
}

// Initialize is a paid mutator transaction binding the contract method 0x1624f6c6.
//
// Solidity: function initialize(string name_, string symbol_, uint8 decimals_) returns()
func (_PowerToken *PowerTokenTransactor) Initialize(opts *bind.TransactOpts, name_ string, symbol_ string, decimals_ uint8) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "initialize", name_, symbol_, decimals_)
}

// Initialize is a paid mutator transaction binding the contract method 0x1624f6c6.
//
// Solidity: function initialize(string name_, string symbol_, uint8 decimals_) returns()
func (_PowerToken *PowerTokenSession) Initialize(name_ string, symbol_ string, decimals_ uint8) (*types.Transaction, error) {
	return _PowerToken.Contract.Initialize(&_PowerToken.TransactOpts, name_, symbol_, decimals_)
}

// Initialize is a paid mutator transaction binding the contract method 0x1624f6c6.
//
// Solidity: function initialize(string name_, string symbol_, uint8 decimals_) returns()
func (_PowerToken *PowerTokenTransactorSession) Initialize(name_ string, symbol_ string, decimals_ uint8) (*types.Transaction, error) {
	return _PowerToken.Contract.Initialize(&_PowerToken.TransactOpts, name_, symbol_, decimals_)
}

// Initialize0 is a paid mutator transaction binding the contract method 0xb29c98ad.
//
// Solidity: function initialize(address enterprise, address baseToken, uint112 baseRate, uint96 minGCFee, uint16 serviceFeePercent, uint32 energyGapHalvingPeriod, uint16 index, uint32 minRentalPeriod, uint32 maxRentalPeriod, bool swappingEnabled) returns()
func (_PowerToken *PowerTokenTransactor) Initialize0(opts *bind.TransactOpts, enterprise common.Address, baseToken common.Address, baseRate *big.Int, minGCFee *big.Int, serviceFeePercent uint16, energyGapHalvingPeriod uint32, index uint16, minRentalPeriod uint32, maxRentalPeriod uint32, swappingEnabled bool) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "initialize0", enterprise, baseToken, baseRate, minGCFee, serviceFeePercent, energyGapHalvingPeriod, index, minRentalPeriod, maxRentalPeriod, swappingEnabled)
}

// Initialize0 is a paid mutator transaction binding the contract method 0xb29c98ad.
//
// Solidity: function initialize(address enterprise, address baseToken, uint112 baseRate, uint96 minGCFee, uint16 serviceFeePercent, uint32 energyGapHalvingPeriod, uint16 index, uint32 minRentalPeriod, uint32 maxRentalPeriod, bool swappingEnabled) returns()
func (_PowerToken *PowerTokenSession) Initialize0(enterprise common.Address, baseToken common.Address, baseRate *big.Int, minGCFee *big.Int, serviceFeePercent uint16, energyGapHalvingPeriod uint32, index uint16, minRentalPeriod uint32, maxRentalPeriod uint32, swappingEnabled bool) (*types.Transaction, error) {
	return _PowerToken.Contract.Initialize0(&_PowerToken.TransactOpts, enterprise, baseToken, baseRate, minGCFee, serviceFeePercent, energyGapHalvingPeriod, index, minRentalPeriod, maxRentalPeriod, swappingEnabled)
}

// Initialize0 is a paid mutator transaction binding the contract method 0xb29c98ad.
//
// Solidity: function initialize(address enterprise, address baseToken, uint112 baseRate, uint96 minGCFee, uint16 serviceFeePercent, uint32 energyGapHalvingPeriod, uint16 index, uint32 minRentalPeriod, uint32 maxRentalPeriod, bool swappingEnabled) returns()
func (_PowerToken *PowerTokenTransactorSession) Initialize0(enterprise common.Address, baseToken common.Address, baseRate *big.Int, minGCFee *big.Int, serviceFeePercent uint16, energyGapHalvingPeriod uint32, index uint16, minRentalPeriod uint32, maxRentalPeriod uint32, swappingEnabled bool) (*types.Transaction, error) {
	return _PowerToken.Contract.Initialize0(&_PowerToken.TransactOpts, enterprise, baseToken, baseRate, minGCFee, serviceFeePercent, energyGapHalvingPeriod, index, minRentalPeriod, maxRentalPeriod, swappingEnabled)
}

// Initialize1 is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address enterprise) returns()
func (_PowerToken *PowerTokenTransactor) Initialize1(opts *bind.TransactOpts, enterprise common.Address) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "initialize1", enterprise)
}

// Initialize1 is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address enterprise) returns()
func (_PowerToken *PowerTokenSession) Initialize1(enterprise common.Address) (*types.Transaction, error) {
	return _PowerToken.Contract.Initialize1(&_PowerToken.TransactOpts, enterprise)
}

// Initialize1 is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address enterprise) returns()
func (_PowerToken *PowerTokenTransactorSession) Initialize1(enterprise common.Address) (*types.Transaction, error) {
	return _PowerToken.Contract.Initialize1(&_PowerToken.TransactOpts, enterprise)
}

// Mint is a paid mutator transaction binding the contract method 0x40c10f19.
//
// Solidity: function mint(address to, uint256 value) returns()
func (_PowerToken *PowerTokenTransactor) Mint(opts *bind.TransactOpts, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "mint", to, value)
}

// Mint is a paid mutator transaction binding the contract method 0x40c10f19.
//
// Solidity: function mint(address to, uint256 value) returns()
func (_PowerToken *PowerTokenSession) Mint(to common.Address, value *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.Mint(&_PowerToken.TransactOpts, to, value)
}

// Mint is a paid mutator transaction binding the contract method 0x40c10f19.
//
// Solidity: function mint(address to, uint256 value) returns()
func (_PowerToken *PowerTokenTransactorSession) Mint(to common.Address, value *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.Mint(&_PowerToken.TransactOpts, to, value)
}

// NotifyNewRental is a paid mutator transaction binding the contract method 0x5a859465.
//
// Solidity: function notifyNewRental(uint256 rentalTokenId) returns()
func (_PowerToken *PowerTokenTransactor) NotifyNewRental(opts *bind.TransactOpts, rentalTokenId *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "notifyNewRental", rentalTokenId)
}

// NotifyNewRental is a paid mutator transaction binding the contract method 0x5a859465.
//
// Solidity: function notifyNewRental(uint256 rentalTokenId) returns()
func (_PowerToken *PowerTokenSession) NotifyNewRental(rentalTokenId *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.NotifyNewRental(&_PowerToken.TransactOpts, rentalTokenId)
}

// NotifyNewRental is a paid mutator transaction binding the contract method 0x5a859465.
//
// Solidity: function notifyNewRental(uint256 rentalTokenId) returns()
func (_PowerToken *PowerTokenTransactorSession) NotifyNewRental(rentalTokenId *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.NotifyNewRental(&_PowerToken.TransactOpts, rentalTokenId)
}

// SetBaseRate is a paid mutator transaction binding the contract method 0x759c8be3.
//
// Solidity: function setBaseRate(uint112 baseRate, address baseToken, uint96 minGCFee) returns()
func (_PowerToken *PowerTokenTransactor) SetBaseRate(opts *bind.TransactOpts, baseRate *big.Int, baseToken common.Address, minGCFee *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "setBaseRate", baseRate, baseToken, minGCFee)
}

// SetBaseRate is a paid mutator transaction binding the contract method 0x759c8be3.
//
// Solidity: function setBaseRate(uint112 baseRate, address baseToken, uint96 minGCFee) returns()
func (_PowerToken *PowerTokenSession) SetBaseRate(baseRate *big.Int, baseToken common.Address, minGCFee *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.SetBaseRate(&_PowerToken.TransactOpts, baseRate, baseToken, minGCFee)
}

// SetBaseRate is a paid mutator transaction binding the contract method 0x759c8be3.
//
// Solidity: function setBaseRate(uint112 baseRate, address baseToken, uint96 minGCFee) returns()
func (_PowerToken *PowerTokenTransactorSession) SetBaseRate(baseRate *big.Int, baseToken common.Address, minGCFee *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.SetBaseRate(&_PowerToken.TransactOpts, baseRate, baseToken, minGCFee)
}

// SetRentalPeriodLimits is a paid mutator transaction binding the contract method 0x6e4dba76.
//
// Solidity: function setRentalPeriodLimits(uint32 minRentalPeriod, uint32 maxRentalPeriod) returns()
func (_PowerToken *PowerTokenTransactor) SetRentalPeriodLimits(opts *bind.TransactOpts, minRentalPeriod uint32, maxRentalPeriod uint32) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "setRentalPeriodLimits", minRentalPeriod, maxRentalPeriod)
}

// SetRentalPeriodLimits is a paid mutator transaction binding the contract method 0x6e4dba76.
//
// Solidity: function setRentalPeriodLimits(uint32 minRentalPeriod, uint32 maxRentalPeriod) returns()
func (_PowerToken *PowerTokenSession) SetRentalPeriodLimits(minRentalPeriod uint32, maxRentalPeriod uint32) (*types.Transaction, error) {
	return _PowerToken.Contract.SetRentalPeriodLimits(&_PowerToken.TransactOpts, minRentalPeriod, maxRentalPeriod)
}

// SetRentalPeriodLimits is a paid mutator transaction binding the contract method 0x6e4dba76.
//
// Solidity: function setRentalPeriodLimits(uint32 minRentalPeriod, uint32 maxRentalPeriod) returns()
func (_PowerToken *PowerTokenTransactorSession) SetRentalPeriodLimits(minRentalPeriod uint32, maxRentalPeriod uint32) (*types.Transaction, error) {
	return _PowerToken.Contract.SetRentalPeriodLimits(&_PowerToken.TransactOpts, minRentalPeriod, maxRentalPeriod)
}

// SetServiceFeePercent is a paid mutator transaction binding the contract method 0x0d148ab6.
//
// Solidity: function setServiceFeePercent(uint16 newServiceFeePercent) returns()
func (_PowerToken *PowerTokenTransactor) SetServiceFeePercent(opts *bind.TransactOpts, newServiceFeePercent uint16) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "setServiceFeePercent", newServiceFeePercent)
}

// SetServiceFeePercent is a paid mutator transaction binding the contract method 0x0d148ab6.
//
// Solidity: function setServiceFeePercent(uint16 newServiceFeePercent) returns()
func (_PowerToken *PowerTokenSession) SetServiceFeePercent(newServiceFeePercent uint16) (*types.Transaction, error) {
	return _PowerToken.Contract.SetServiceFeePercent(&_PowerToken.TransactOpts, newServiceFeePercent)
}

// SetServiceFeePercent is a paid mutator transaction binding the contract method 0x0d148ab6.
//
// Solidity: function setServiceFeePercent(uint16 newServiceFeePercent) returns()
func (_PowerToken *PowerTokenTransactorSession) SetServiceFeePercent(newServiceFeePercent uint16) (*types.Transaction, error) {
	return _PowerToken.Contract.SetServiceFeePercent(&_PowerToken.TransactOpts, newServiceFeePercent)
}

// SwapIn is a paid mutator transaction binding the contract method 0x759c7265.
//
// Solidity: function swapIn(uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactor) SwapIn(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "swapIn", amount)
}

// SwapIn is a paid mutator transaction binding the contract method 0x759c7265.
//
// Solidity: function swapIn(uint256 amount) returns(bool)
func (_PowerToken *PowerTokenSession) SwapIn(amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.SwapIn(&_PowerToken.TransactOpts, amount)
}

// SwapIn is a paid mutator transaction binding the contract method 0x759c7265.
//
// Solidity: function swapIn(uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactorSession) SwapIn(amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.SwapIn(&_PowerToken.TransactOpts, amount)
}

// SwapOut is a paid mutator transaction binding the contract method 0x74d945d9.
//
// Solidity: function swapOut(uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactor) SwapOut(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "swapOut", amount)
}

// SwapOut is a paid mutator transaction binding the contract method 0x74d945d9.
//
// Solidity: function swapOut(uint256 amount) returns(bool)
func (_PowerToken *PowerTokenSession) SwapOut(amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.SwapOut(&_PowerToken.TransactOpts, amount)
}

// SwapOut is a paid mutator transaction binding the contract method 0x74d945d9.
//
// Solidity: function swapOut(uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactorSession) SwapOut(amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.SwapOut(&_PowerToken.TransactOpts, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address recipient, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactor) Transfer(opts *bind.TransactOpts, recipient common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "transfer", recipient, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address recipient, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenSession) Transfer(recipient common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.Transfer(&_PowerToken.TransactOpts, recipient, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address recipient, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactorSession) Transfer(recipient common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.Transfer(&_PowerToken.TransactOpts, recipient, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address sender, address recipient, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactor) TransferFrom(opts *bind.TransactOpts, sender common.Address, recipient common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.contract.Transact(opts, "transferFrom", sender, recipient, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address sender, address recipient, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenSession) TransferFrom(sender common.Address, recipient common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.TransferFrom(&_PowerToken.TransactOpts, sender, recipient, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address sender, address recipient, uint256 amount) returns(bool)
func (_PowerToken *PowerTokenTransactorSession) TransferFrom(sender common.Address, recipient common.Address, amount *big.Int) (*types.Transaction, error) {
	return _PowerToken.Contract.TransferFrom(&_PowerToken.TransactOpts, sender, recipient, amount)
}

// PowerTokenApprovalIterator is returned from FilterApproval and is used to iterate over the raw logs and unpacked data for Approval events raised by the PowerToken contract.
type PowerTokenApprovalIterator struct {
	Event *PowerTokenApproval // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *PowerTokenApprovalIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(PowerTokenApproval)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(PowerTokenApproval)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *PowerTokenApprovalIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *PowerTokenApprovalIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// PowerTokenApproval represents a Approval event raised by the PowerToken contract.
type PowerTokenApproval struct {
	Owner   common.Address
	Spender common.Address
	Value   *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterApproval is a free log retrieval operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_PowerToken *PowerTokenFilterer) FilterApproval(opts *bind.FilterOpts, owner []common.Address, spender []common.Address) (*PowerTokenApprovalIterator, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _PowerToken.contract.FilterLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return &PowerTokenApprovalIterator{contract: _PowerToken.contract, event: "Approval", logs: logs, sub: sub}, nil
}

// WatchApproval is a free log subscription operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_PowerToken *PowerTokenFilterer) WatchApproval(opts *bind.WatchOpts, sink chan<- *PowerTokenApproval, owner []common.Address, spender []common.Address) (event.Subscription, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _PowerToken.contract.WatchLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(PowerTokenApproval)
				if err := _PowerToken.contract.UnpackLog(event, "Approval", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseApproval is a log parse operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_PowerToken *PowerTokenFilterer) ParseApproval(log types.Log) (*PowerTokenApproval, error) {
	event := new(PowerTokenApproval)
	if err := _PowerToken.contract.UnpackLog(event, "Approval", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// PowerTokenBaseRateChangedIterator is returned from FilterBaseRateChanged and is used to iterate over the raw logs and unpacked data for BaseRateChanged events raised by the PowerToken contract.
type PowerTokenBaseRateChangedIterator struct {
	Event *PowerTokenBaseRateChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *PowerTokenBaseRateChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(PowerTokenBaseRateChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(PowerTokenBaseRateChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *PowerTokenBaseRateChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *PowerTokenBaseRateChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// PowerTokenBaseRateChanged represents a BaseRateChanged event raised by the PowerToken contract.
type PowerTokenBaseRateChanged struct {
	BaseRate  *big.Int
	BaseToken common.Address
	MinGCFee  *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterBaseRateChanged is a free log retrieval operation binding the contract event 0x2833a6b2910014b082775316936860d808d821fc59634fa08bc19c19427fa99d.
//
// Solidity: event BaseRateChanged(uint112 baseRate, address baseToken, uint96 minGCFee)
func (_PowerToken *PowerTokenFilterer) FilterBaseRateChanged(opts *bind.FilterOpts) (*PowerTokenBaseRateChangedIterator, error) {

	logs, sub, err := _PowerToken.contract.FilterLogs(opts, "BaseRateChanged")
	if err != nil {
		return nil, err
	}
	return &PowerTokenBaseRateChangedIterator{contract: _PowerToken.contract, event: "BaseRateChanged", logs: logs, sub: sub}, nil
}

// WatchBaseRateChanged is a free log subscription operation binding the contract event 0x2833a6b2910014b082775316936860d808d821fc59634fa08bc19c19427fa99d.
//
// Solidity: event BaseRateChanged(uint112 baseRate, address baseToken, uint96 minGCFee)
func (_PowerToken *PowerTokenFilterer) WatchBaseRateChanged(opts *bind.WatchOpts, sink chan<- *PowerTokenBaseRateChanged) (event.Subscription, error) {

	logs, sub, err := _PowerToken.contract.WatchLogs(opts, "BaseRateChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(PowerTokenBaseRateChanged)
				if err := _PowerToken.contract.UnpackLog(event, "BaseRateChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBaseRateChanged is a log parse operation binding the contract event 0x2833a6b2910014b082775316936860d808d821fc59634fa08bc19c19427fa99d.
//
// Solidity: event BaseRateChanged(uint112 baseRate, address baseToken, uint96 minGCFee)
func (_PowerToken *PowerTokenFilterer) ParseBaseRateChanged(log types.Log) (*PowerTokenBaseRateChanged, error) {
	event := new(PowerTokenBaseRateChanged)
	if err := _PowerToken.contract.UnpackLog(event, "BaseRateChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// PowerTokenRentalPeriodLimitsChangedIterator is returned from FilterRentalPeriodLimitsChanged and is used to iterate over the raw logs and unpacked data for RentalPeriodLimitsChanged events raised by the PowerToken contract.
type PowerTokenRentalPeriodLimitsChangedIterator struct {
	Event *PowerTokenRentalPeriodLimitsChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *PowerTokenRentalPeriodLimitsChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(PowerTokenRentalPeriodLimitsChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(PowerTokenRentalPeriodLimitsChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *PowerTokenRentalPeriodLimitsChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *PowerTokenRentalPeriodLimitsChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// PowerTokenRentalPeriodLimitsChanged represents a RentalPeriodLimitsChanged event raised by the PowerToken contract.
type PowerTokenRentalPeriodLimitsChanged struct {
	MinRentalPeriod uint32
	MaxRentalPeriod uint32
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterRentalPeriodLimitsChanged is a free log retrieval operation binding the contract event 0x61db23004a2218e8ecbda348735cc62eaaf3ca857e2705615a8d91acf6d7b817.
//
// Solidity: event RentalPeriodLimitsChanged(uint32 minRentalPeriod, uint32 maxRentalPeriod)
func (_PowerToken *PowerTokenFilterer) FilterRentalPeriodLimitsChanged(opts *bind.FilterOpts) (*PowerTokenRentalPeriodLimitsChangedIterator, error) {

	logs, sub, err := _PowerToken.contract.FilterLogs(opts, "RentalPeriodLimitsChanged")
	if err != nil {
		return nil, err
	}
	return &PowerTokenRentalPeriodLimitsChangedIterator{contract: _PowerToken.contract, event: "RentalPeriodLimitsChanged", logs: logs, sub: sub}, nil
}

// WatchRentalPeriodLimitsChanged is a free log subscription operation binding the contract event 0x61db23004a2218e8ecbda348735cc62eaaf3ca857e2705615a8d91acf6d7b817.
//
// Solidity: event RentalPeriodLimitsChanged(uint32 minRentalPeriod, uint32 maxRentalPeriod)
func (_PowerToken *PowerTokenFilterer) WatchRentalPeriodLimitsChanged(opts *bind.WatchOpts, sink chan<- *PowerTokenRentalPeriodLimitsChanged) (event.Subscription, error) {

	logs, sub, err := _PowerToken.contract.WatchLogs(opts, "RentalPeriodLimitsChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(PowerTokenRentalPeriodLimitsChanged)
				if err := _PowerToken.contract.UnpackLog(event, "RentalPeriodLimitsChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRentalPeriodLimitsChanged is a log parse operation binding the contract event 0x61db23004a2218e8ecbda348735cc62eaaf3ca857e2705615a8d91acf6d7b817.
//
// Solidity: event RentalPeriodLimitsChanged(uint32 minRentalPeriod, uint32 maxRentalPeriod)
func (_PowerToken *PowerTokenFilterer) ParseRentalPeriodLimitsChanged(log types.Log) (*PowerTokenRentalPeriodLimitsChanged, error) {
	event := new(PowerTokenRentalPeriodLimitsChanged)
	if err := _PowerToken.contract.UnpackLog(event, "RentalPeriodLimitsChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// PowerTokenServiceFeePercentChangedIterator is returned from FilterServiceFeePercentChanged and is used to iterate over the raw logs and unpacked data for ServiceFeePercentChanged events raised by the PowerToken contract.
type PowerTokenServiceFeePercentChangedIterator struct {
	Event *PowerTokenServiceFeePercentChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *PowerTokenServiceFeePercentChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(PowerTokenServiceFeePercentChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(PowerTokenServiceFeePercentChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *PowerTokenServiceFeePercentChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *PowerTokenServiceFeePercentChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// PowerTokenServiceFeePercentChanged represents a ServiceFeePercentChanged event raised by the PowerToken contract.
type PowerTokenServiceFeePercentChanged struct {
	Percent uint16
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterServiceFeePercentChanged is a free log retrieval operation binding the contract event 0x7b5d5b53df75c87d5bea0f0535cd81a355db537ee2ca5dcea9849433d99847b9.
//
// Solidity: event ServiceFeePercentChanged(uint16 percent)
func (_PowerToken *PowerTokenFilterer) FilterServiceFeePercentChanged(opts *bind.FilterOpts) (*PowerTokenServiceFeePercentChangedIterator, error) {

	logs, sub, err := _PowerToken.contract.FilterLogs(opts, "ServiceFeePercentChanged")
	if err != nil {
		return nil, err
	}
	return &PowerTokenServiceFeePercentChangedIterator{contract: _PowerToken.contract, event: "ServiceFeePercentChanged", logs: logs, sub: sub}, nil
}

// WatchServiceFeePercentChanged is a free log subscription operation binding the contract event 0x7b5d5b53df75c87d5bea0f0535cd81a355db537ee2ca5dcea9849433d99847b9.
//
// Solidity: event ServiceFeePercentChanged(uint16 percent)
func (_PowerToken *PowerTokenFilterer) WatchServiceFeePercentChanged(opts *bind.WatchOpts, sink chan<- *PowerTokenServiceFeePercentChanged) (event.Subscription, error) {

	logs, sub, err := _PowerToken.contract.WatchLogs(opts, "ServiceFeePercentChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(PowerTokenServiceFeePercentChanged)
				if err := _PowerToken.contract.UnpackLog(event, "ServiceFeePercentChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseServiceFeePercentChanged is a log parse operation binding the contract event 0x7b5d5b53df75c87d5bea0f0535cd81a355db537ee2ca5dcea9849433d99847b9.
//
// Solidity: event ServiceFeePercentChanged(uint16 percent)
func (_PowerToken *PowerTokenFilterer) ParseServiceFeePercentChanged(log types.Log) (*PowerTokenServiceFeePercentChanged, error) {
	event := new(PowerTokenServiceFeePercentChanged)
	if err := _PowerToken.contract.UnpackLog(event, "ServiceFeePercentChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// PowerTokenSwappingEnabledIterator is returned from FilterSwappingEnabled and is used to iterate over the raw logs and unpacked data for SwappingEnabled events raised by the PowerToken contract.
type PowerTokenSwappingEnabledIterator struct {
	Event *PowerTokenSwappingEnabled // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *PowerTokenSwappingEnabledIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(PowerTokenSwappingEnabled)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(PowerTokenSwappingEnabled)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *PowerTokenSwappingEnabledIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *PowerTokenSwappingEnabledIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// PowerTokenSwappingEnabled represents a SwappingEnabled event raised by the PowerToken contract.
type PowerTokenSwappingEnabled struct {
	Raw types.Log // Blockchain specific contextual infos
}

// FilterSwappingEnabled is a free log retrieval operation binding the contract event 0x4f8e8d44a98a830b5142e61afa1cc8dacbf21291bcd657e26d2c7780e2c7fac4.
//
// Solidity: event SwappingEnabled()
func (_PowerToken *PowerTokenFilterer) FilterSwappingEnabled(opts *bind.FilterOpts) (*PowerTokenSwappingEnabledIterator, error) {

	logs, sub, err := _PowerToken.contract.FilterLogs(opts, "SwappingEnabled")
	if err != nil {
		return nil, err
	}
	return &PowerTokenSwappingEnabledIterator{contract: _PowerToken.contract, event: "SwappingEnabled", logs: logs, sub: sub}, nil
}

// WatchSwappingEnabled is a free log subscription operation binding the contract event 0x4f8e8d44a98a830b5142e61afa1cc8dacbf21291bcd657e26d2c7780e2c7fac4.
//
// Solidity: event SwappingEnabled()
func (_PowerToken *PowerTokenFilterer) WatchSwappingEnabled(opts *bind.WatchOpts, sink chan<- *PowerTokenSwappingEnabled) (event.Subscription, error) {

	logs, sub, err := _PowerToken.contract.WatchLogs(opts, "SwappingEnabled")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(PowerTokenSwappingEnabled)
				if err := _PowerToken.contract.UnpackLog(event, "SwappingEnabled", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSwappingEnabled is a log parse operation binding the contract event 0x4f8e8d44a98a830b5142e61afa1cc8dacbf21291bcd657e26d2c7780e2c7fac4.
//
// Solidity: event SwappingEnabled()
func (_PowerToken *PowerTokenFilterer) ParseSwappingEnabled(log types.Log) (*PowerTokenSwappingEnabled, error) {
	event := new(PowerTokenSwappingEnabled)
	if err := _PowerToken.contract.UnpackLog(event, "SwappingEnabled", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// PowerTokenTransferIterator is returned from FilterTransfer and is used to iterate over the raw logs and unpacked data for Transfer events raised by the PowerToken contract.
type PowerTokenTransferIterator struct {
	Event *PowerTokenTransfer // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *PowerTokenTransferIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(PowerTokenTransfer)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(PowerTokenTransfer)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *PowerTokenTransferIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *PowerTokenTransferIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// PowerTokenTransfer represents a Transfer event raised by the PowerToken contract.
type PowerTokenTransfer struct {
	From  common.Address
	To    common.Address
	Value *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterTransfer is a free log retrieval operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_PowerToken *PowerTokenFilterer) FilterTransfer(opts *bind.FilterOpts, from []common.Address, to []common.Address) (*PowerTokenTransferIterator, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _PowerToken.contract.FilterLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return &PowerTokenTransferIterator{contract: _PowerToken.contract, event: "Transfer", logs: logs, sub: sub}, nil
}

// WatchTransfer is a free log subscription operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_PowerToken *PowerTokenFilterer) WatchTransfer(opts *bind.WatchOpts, sink chan<- *PowerTokenTransfer, from []common.Address, to []common.Address) (event.Subscription, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _PowerToken.contract.WatchLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(PowerTokenTransfer)
				if err := _PowerToken.contract.UnpackLog(event, "Transfer", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransfer is a log parse operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_PowerToken *PowerTokenFilterer) ParseTransfer(log types.Log) (*PowerTokenTransfer, error) {
	event := new(PowerTokenTransfer)
	if err := _PowerToken.contract.UnpackLog(event, "Transfer", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// PowerTokenTransferEnabledIterator is returned from FilterTransferEnabled and is used to iterate over the raw logs and unpacked data for TransferEnabled events raised by the PowerToken contract.
type PowerTokenTransferEnabledIterator struct {
	Event *PowerTokenTransferEnabled // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *PowerTokenTransferEnabledIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(PowerTokenTransferEnabled)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(PowerTokenTransferEnabled)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *PowerTokenTransferEnabledIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *PowerTokenTransferEnabledIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// PowerTokenTransferEnabled represents a TransferEnabled event raised by the PowerToken contract.
type PowerTokenTransferEnabled struct {
	Raw types.Log // Blockchain specific contextual infos
}

// FilterTransferEnabled is a free log retrieval operation binding the contract event 0x75fce015c314a132947a3e42f6ab79ab8e05397dabf35b4d742dea228bbadc2d.
//
// Solidity: event TransferEnabled()
func (_PowerToken *PowerTokenFilterer) FilterTransferEnabled(opts *bind.FilterOpts) (*PowerTokenTransferEnabledIterator, error) {

	logs, sub, err := _PowerToken.contract.FilterLogs(opts, "TransferEnabled")
	if err != nil {
		return nil, err
	}
	return &PowerTokenTransferEnabledIterator{contract: _PowerToken.contract, event: "TransferEnabled", logs: logs, sub: sub}, nil
}

// WatchTransferEnabled is a free log subscription operation binding the contract event 0x75fce015c314a132947a3e42f6ab79ab8e05397dabf35b4d742dea228bbadc2d.
//
// Solidity: event TransferEnabled()
func (_PowerToken *PowerTokenFilterer) WatchTransferEnabled(opts *bind.WatchOpts, sink chan<- *PowerTokenTransferEnabled) (event.Subscription, error) {

	logs, sub, err := _PowerToken.contract.WatchLogs(opts, "TransferEnabled")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(PowerTokenTransferEnabled)
				if err := _PowerToken.contract.UnpackLog(event, "TransferEnabled", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransferEnabled is a log parse operation binding the contract event 0x75fce015c314a132947a3e42f6ab79ab8e05397dabf35b4d742dea228bbadc2d.
//
// Solidity: event TransferEnabled()
func (_PowerToken *PowerTokenFilterer) ParseTransferEnabled(log types.Log) (*PowerTokenTransferEnabled, error) {
	event := new(PowerTokenTransferEnabled)
	if err := _PowerToken.contract.UnpackLog(event, "TransferEnabled", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
